Module(body=[
  Import(names=[alias(
    name='torch',
    asname=None)]),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='manual_seed',
      ctx=Load()),
    args=[Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='seed',
      ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='set_num_threads',
      ctx=Load()),
    args=[Num(n=1)],
    keywords=[])),
  Assign(
    targets=[Name(
      id='train_sampler',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='utils',
              ctx=Load()),
            attr='data',
            ctx=Load()),
          attr='distributed',
          ctx=Load()),
        attr='DistributedSampler',
        ctx=Load()),
      args=[Name(
        id='train_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='num_replicas',
          value=Num(n=2)),
        keyword(
          arg='rank',
          value=Num(n=0))])),
  Assign(
    targets=[Name(
      id='train_loader',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='utils',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='DataLoader',
        ctx=Load()),
      args=[Name(
        id='train_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='batch_size',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='batch_size',
            ctx=Load())),
        keyword(
          arg='sampler',
          value=Name(
            id='train_sampler',
            ctx=Load())),
        keyword(
          arg=None,
          value=Name(
            id='kwargs',
            ctx=Load()))])),
  Assign(
    targets=[Name(
      id='test_sampler',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='utils',
              ctx=Load()),
            attr='data',
            ctx=Load()),
          attr='distributed',
          ctx=Load()),
        attr='DistributedSampler',
        ctx=Load()),
      args=[Name(
        id='test_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='num_replicas',
          value=Num(n=2)),
        keyword(
          arg='rank',
          value=Num(n=0))])),
  Assign(
    targets=[Name(
      id='test_loader',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='utils',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='DataLoader',
        ctx=Load()),
      args=[Name(
        id='test_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='batch_size',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='test_batch_size',
            ctx=Load())),
        keyword(
          arg='sampler',
          value=Name(
            id='test_sampler',
            ctx=Load())),
        keyword(
          arg=None,
          value=Name(
            id='kwargs',
            ctx=Load()))])),
  Assign(
    targets=[Name(
      id='optimizer',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='optim',
          ctx=Load()),
        attr='SGD',
        ctx=Load()),
      args=[],
      keywords=[
        keyword(
          arg='params',
          value=Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='parameters',
              ctx=Load()),
            args=[],
            keywords=[])),
        keyword(
          arg='lr',
          value=Num(n=0.001)),
        keyword(
          arg='momentum',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='momentum',
            ctx=Load()))])),
  FunctionDef(
    name='train',
    args=arguments(
      args=[arg(
        arg='epoch',
        annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='train',
          ctx=Load()),
        args=[],
        keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='train_sampler',
            ctx=Load()),
          attr='set_epoch',
          ctx=Load()),
        args=[Name(
          id='epoch',
          ctx=Load())],
        keywords=[])),
      For(
        target=Tuple(
          elts=[
            Name(
              id='batch_idx',
              ctx=Store()),
            Tuple(
              elts=[
                Name(
                  id='data',
                  ctx=Store()),
                Name(
                  id='target',
                  ctx=Store())],
              ctx=Store())],
          ctx=Store()),
        iter=Call(
          func=Name(
            id='enumerate',
            ctx=Load()),
          args=[Name(
            id='train_loader',
            ctx=Load())],
          keywords=[]),
        body=[
          If(
            test=Attribute(
              value=Name(
                id='args',
                ctx=Load()),
              attr='cuda',
              ctx=Load()),
            body=[Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='data',
                    ctx=Store()),
                  Name(
                    id='target',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='data',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='target',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                ctx=Load()))],
            orelse=[]),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='optimizer',
                ctx=Load()),
              attr='zero_grad',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Name(
              id='output',
              ctx=Store())],
            value=Call(
              func=Name(
                id='model',
                ctx=Load()),
              args=[Name(
                id='data',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='loss',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='nll_loss',
                ctx=Load()),
              args=[
                Name(
                  id='output',
                  ctx=Load()),
                Name(
                  id='target',
                  ctx=Load())],
              keywords=[])),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='loss',
                ctx=Load()),
              attr='backward',
              ctx=Load()),
            args=[],
            keywords=[])),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='optimizer',
                ctx=Load()),
              attr='step',
              ctx=Load()),
            args=[],
            keywords=[])),
          If(
            test=Compare(
              left=BinOp(
                left=Name(
                  id='batch_idx',
                  ctx=Load()),
                op=Mod(),
                right=Attribute(
                  value=Name(
                    id='args',
                    ctx=Load()),
                  attr='log_interval',
                  ctx=Load())),
              ops=[Eq()],
              comparators=[Num(n=0)]),
            body=[Expr(value=Call(
              func=Name(
                id='print',
                ctx=Load()),
              args=[Call(
                func=Attribute(
                  value=Str(s='Train Epoch: {} [{}/{} ({:.0f}%)]\tLoss: {:.6f}'),
                  attr='format',
                  ctx=Load()),
                args=[
                  Name(
                    id='epoch',
                    ctx=Load()),
                  BinOp(
                    left=Name(
                      id='batch_idx',
                      ctx=Load()),
                    op=Mult(),
                    right=Call(
                      func=Name(
                        id='len',
                        ctx=Load()),
                      args=[Name(
                        id='data',
                        ctx=Load())],
                      keywords=[])),
                  Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Name(
                      id='train_sampler',
                      ctx=Load())],
                    keywords=[]),
                  BinOp(
                    left=BinOp(
                      left=Num(n=100.0),
                      op=Mult(),
                      right=Name(
                        id='batch_idx',
                        ctx=Load())),
                    op=Div(),
                    right=Call(
                      func=Name(
                        id='len',
                        ctx=Load()),
                      args=[Name(
                        id='train_loader',
                        ctx=Load())],
                      keywords=[])),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='loss',
                        ctx=Load()),
                      attr='item',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])],
              keywords=[]))],
            orelse=[])],
        orelse=[])],
    decorator_list=[],
    returns=None),
  FunctionDef(
    name='metric_average',
    args=arguments(
      args=[
        arg(
          arg='val',
          annotation=None),
        arg(
          arg='name',
          annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[Return(value=Num(n=1))],
    decorator_list=[],
    returns=None),
  FunctionDef(
    name='test',
    args=arguments(
      args=[],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='eval',
          ctx=Load()),
        args=[],
        keywords=[])),
      Assign(
        targets=[Name(
          id='test_loss',
          ctx=Store())],
        value=Num(n=0.0)),
      Assign(
        targets=[Name(
          id='test_accuracy',
          ctx=Store())],
        value=Num(n=0.0)),
      For(
        target=Tuple(
          elts=[
            Name(
              id='data',
              ctx=Store()),
            Name(
              id='target',
              ctx=Store())],
          ctx=Store()),
        iter=Name(
          id='test_loader',
          ctx=Load()),
        body=[
          If(
            test=Attribute(
              value=Name(
                id='args',
                ctx=Load()),
              attr='cuda',
              ctx=Load()),
            body=[Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='data',
                    ctx=Store()),
                  Name(
                    id='target',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='data',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='target',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                ctx=Load()))],
            orelse=[]),
          Assign(
            targets=[Name(
              id='output',
              ctx=Store())],
            value=Call(
              func=Name(
                id='model',
                ctx=Load()),
              args=[Name(
                id='data',
                ctx=Load())],
              keywords=[])),
          AugAssign(
            target=Name(
              id='test_loss',
              ctx=Store()),
            op=Add(),
            value=Call(
              func=Attribute(
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='F',
                      ctx=Load()),
                    attr='nll_loss',
                    ctx=Load()),
                  args=[
                    Name(
                      id='output',
                      ctx=Load()),
                    Name(
                      id='target',
                      ctx=Load())],
                  keywords=[keyword(
                    arg='size_average',
                    value=NameConstant(value=False))]),
                attr='item',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Name(
              id='pred',
              ctx=Store())],
            value=Subscript(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(
                      id='output',
                      ctx=Load()),
                    attr='data',
                    ctx=Load()),
                  attr='max',
                  ctx=Load()),
                args=[Num(n=1)],
                keywords=[keyword(
                  arg='keepdim',
                  value=NameConstant(value=True))]),
              slice=Index(value=Num(n=1)),
              ctx=Load())),
          AugAssign(
            target=Name(
              id='test_accuracy',
              ctx=Store()),
            op=Add(),
            value=Call(
              func=Attribute(
                value=Call(
                  func=Attribute(
                    value=Call(
                      func=Attribute(
                        value=Call(
                          func=Attribute(
                            value=Name(
                              id='pred',
                              ctx=Load()),
                            attr='eq',
                            ctx=Load()),
                          args=[Call(
                            func=Attribute(
                              value=Attribute(
                                value=Name(
                                  id='target',
                                  ctx=Load()),
                                attr='data',
                                ctx=Load()),
                              attr='view_as',
                              ctx=Load()),
                            args=[Name(
                              id='pred',
                              ctx=Load())],
                            keywords=[])],
                          keywords=[]),
                        attr='cpu',
                        ctx=Load()),
                      args=[],
                      keywords=[]),
                    attr='float',
                    ctx=Load()),
                  args=[],
                  keywords=[]),
                attr='sum',
                ctx=Load()),
              args=[],
              keywords=[]))],
        orelse=[]),
      AugAssign(
        target=Name(
          id='test_loss',
          ctx=Store()),
        op=Div(),
        value=Call(
          func=Name(
            id='len',
            ctx=Load()),
          args=[Name(
            id='test_sampler',
            ctx=Load())],
          keywords=[])),
      AugAssign(
        target=Name(
          id='test_accuracy',
          ctx=Store()),
        op=Div(),
        value=Call(
          func=Name(
            id='len',
            ctx=Load()),
          args=[Name(
            id='test_sampler',
            ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='test_loss',
          ctx=Store())],
        value=Call(
          func=Name(
            id='metric_average',
            ctx=Load()),
          args=[
            Name(
              id='test_loss',
              ctx=Load()),
            Str(s='avg_loss')],
          keywords=[])),
      Assign(
        targets=[Name(
          id='test_accuracy',
          ctx=Store())],
        value=Call(
          func=Name(
            id='metric_average',
            ctx=Load()),
          args=[
            Name(
              id='test_accuracy',
              ctx=Load()),
            Str(s='avg_accuracy')],
          keywords=[])),
      If(
        test=Compare(
          left=Num(n=0),
          ops=[Eq()],
          comparators=[Num(n=0)]),
        body=[Expr(value=Call(
          func=Name(
            id='print',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Str(s='\nTest set: Average loss: {:.4f}, Accuracy: {:.2f}%\n'),
              attr='format',
              ctx=Load()),
            args=[
              Name(
                id='test_loss',
                ctx=Load()),
              BinOp(
                left=Num(n=100.0),
                op=Mult(),
                right=Name(
                  id='test_accuracy',
                  ctx=Load()))],
            keywords=[])],
          keywords=[]))],
        orelse=[])],
    decorator_list=[],
    returns=None)])