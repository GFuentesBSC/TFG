Module(body=[
  Import(names=[alias(
    name='os',
    asname=None)]),
  Import(names=[alias(
    name='torch',
    asname=None)]),
  Import(names=[alias(
    name='pandas',
    asname='pd')]),
  ImportFrom(
    module='skimage',
    names=[
      alias(
        name='io',
        asname=None),
      alias(
        name='transform',
        asname=None)],
    level=0),
  Import(names=[alias(
    name='numpy',
    asname='np')]),
  Import(names=[alias(
    name='matplotlib.pyplot',
    asname='plt')]),
  ImportFrom(
    module='torch.utils.data',
    names=[
      alias(
        name='Dataset',
        asname=None),
      alias(
        name='DataLoader',
        asname=None)],
    level=0),
  ImportFrom(
    module='torchvision',
    names=[
      alias(
        name='transforms',
        asname=None),
      alias(
        name='utils',
        asname=None)],
    level=0),
  ImportFrom(
    module='torch.optim.lr_scheduler',
    names=[alias(
      name='ReduceLROnPlateau',
      asname=None)],
    level=0),
  ImportFrom(
    module='torch.optim.lr_scheduler',
    names=[alias(
      name='StepLR',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='torchvision.models',
    asname='models')]),
  Import(names=[alias(
    name='torch.optim',
    asname='optim')]),
  ImportFrom(
    module='torch.optim',
    names=[alias(
      name='lr_scheduler',
      asname=None)],
    level=0),
  ImportFrom(
    module='torch.autograd',
    names=[alias(
      name='Variable',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='time',
    asname=None)]),
  Import(names=[alias(
    name='numpy',
    asname=None)]),
  Import(names=[alias(
    name='h5py',
    asname=None)]),
  Import(names=[alias(
    name='copy',
    asname=None)]),
  ImportFrom(
    module='PIL',
    names=[
      alias(
        name='Image',
        asname=None),
      alias(
        name='ImageSequence',
        asname=None)],
    level=0),
  Import(names=[alias(
    name='cv2',
    asname=None)]),
  Import(names=[alias(
    name='flair',
    asname=None)]),
  ImportFrom(
    module='flair.embeddings',
    names=[
      alias(
        name='WordEmbeddings',
        asname=None),
      alias(
        name='FlairEmbeddings',
        asname=None),
      alias(
        name='StackedEmbeddings',
        asname=None),
      alias(
        name='Sentence',
        asname=None),
      alias(
        name='DocumentPoolEmbeddings',
        asname=None),
      alias(
        name='DocumentRNNEmbeddings',
        asname=None)],
    level=0),
  ImportFrom(
    module='flair.embeddings',
    names=[alias(
      name='ELMoEmbeddings',
      asname=None)],
    level=0),
  ImportFrom(
    module='flair.embeddings',
    names=[alias(
      name='BytePairEmbeddings',
      asname=None)],
    level=0),
  ImportFrom(
    module='flair.embeddings',
    names=[alias(
      name='BertEmbeddings',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='torch.nn',
    asname='nn')]),
  Import(names=[alias(
    name='torch.nn.functional',
    asname='F')]),
  ImportFrom(
    module='torch.autograd',
    names=[alias(
      name='Variable',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='math',
    asname=None)]),
  ImportFrom(
    module='typing',
    names=[
      alias(
        name='List',
        asname=None),
      alias(
        name='Union',
        asname=None)],
    level=0),
  ImportFrom(
    module='pathlib',
    names=[alias(
      name='Path',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='seaborn',
    asname='sn')]),
  Import(names=[alias(
    name='H5Dataset_modular',
    asname='H5')]),
  Assign(
    targets=[Name(
      id='SEED',
      ctx=Store())],
    value=Num(n=42)),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='manual_seed',
      ctx=Load()),
    args=[Name(
      id='SEED',
      ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Attribute(
        value=Name(
          id='torch',
          ctx=Load()),
        attr='cuda',
        ctx=Load()),
      attr='manual_seed',
      ctx=Load()),
    args=[Name(
      id='SEED',
      ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Attribute(
        value=Name(
          id='torch',
          ctx=Load()),
        attr='cuda',
        ctx=Load()),
      attr='manual_seed_all',
      ctx=Load()),
    args=[Name(
      id='SEED',
      ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='manual_seed',
      ctx=Load()),
    args=[Name(
      id='SEED',
      ctx=Load())],
    keywords=[])),
  Assign(
    targets=[Attribute(
      value=Attribute(
        value=Attribute(
          value=Name(
            id='torch',
            ctx=Load()),
          attr='backends',
          ctx=Load()),
        attr='cudnn',
        ctx=Load()),
      attr='benchmark',
      ctx=Store())],
    value=NameConstant(value=False)),
  Assign(
    targets=[Attribute(
      value=Attribute(
        value=Attribute(
          value=Name(
            id='torch',
            ctx=Load()),
          attr='backends',
          ctx=Load()),
        attr='cudnn',
        ctx=Load()),
      attr='deterministic',
      ctx=Store())],
    value=NameConstant(value=True)),
  FunctionDef(
    name='set_parameter_requires_grad',
    args=arguments(
      args=[
        arg(
          arg='model',
          annotation=None),
        arg(
          arg='feature_extracting',
          annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[If(
      test=Name(
        id='feature_extracting',
        ctx=Load()),
      body=[For(
        target=Name(
          id='param',
          ctx=Store()),
        iter=Call(
          func=Attribute(
            value=Name(
              id='model',
              ctx=Load()),
            attr='parameters',
            ctx=Load()),
          args=[],
          keywords=[]),
        body=[Assign(
          targets=[Attribute(
            value=Name(
              id='param',
              ctx=Load()),
            attr='requires_grad',
            ctx=Store())],
          value=NameConstant(value=False))],
        orelse=[])],
      orelse=[])],
    decorator_list=[],
    returns=None),
  FunctionDef(
    name='func',
    args=arguments(
      args=[],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Assign(
        targets=[Name(
          id='description',
          ctx=Store())],
        value=Str(s='flair')),
      Assign(
        targets=[Name(
          id='max_epochs',
          ctx=Store())],
        value=Num(n=10)),
      Assign(
        targets=[Name(
          id='batch_size',
          ctx=Store())],
        value=Num(n=128)),
      Assign(
        targets=[Name(
          id='num_classes',
          ctx=Store())],
        value=Num(n=16)),
      Assign(
        targets=[Name(
          id='full_model',
          ctx=Store())],
        value=Str(s='image')),
      Assign(
        targets=[Name(
          id='image_model',
          ctx=Store())],
        value=Str(s='resnet')),
      Assign(
        targets=[Name(
          id='image_training_type',
          ctx=Store())],
        value=Str(s='finetuning')),
      Assign(
        targets=[Name(
          id='text_model',
          ctx=Store())],
        value=Str(s='cnn')),
      Assign(
        targets=[Name(
          id='combined_embeddings',
          ctx=Store())],
        value=Str(s='stack')),
      Assign(
        targets=[Name(
          id='model_path',
          ctx=Store())],
        value=Str(s='./resources/taggers/small_tobacco/')),
      Assign(
        targets=[Name(
          id='learning_rate',
          ctx=Store())],
        value=Num(n=0.008)),
      Assign(
        targets=[Name(
          id='hdf5_file_val',
          ctx=Store())],
        value=Str(s='/gpfs/scratch/bsc31/bsc31275/BigTobacco_images_val.hdf5')),
      Assign(
        targets=[Name(
          id='hdf5_file_test',
          ctx=Store())],
        value=Str(s='/gpfs/scratch/bsc31/bsc31275/BigTobacco_images_test.hdf5')),
      Assign(
        targets=[Name(
          id='hdf5_file_train',
          ctx=Store())],
        value=Str(s='/gpfs/scratch/bsc31/bsc31275/BigTobacco_images_train.hdf5')),
      If(
        test=Compare(
          left=Name(
            id='combined_embeddings',
            ctx=Load()),
          ops=[Eq()],
          comparators=[Str(s='documentpool')]),
        body=[Assign(
          targets=[Name(
            id='text_model',
            ctx=Store())],
          value=Str(s='linear'))],
        orelse=[]),
      Assign(
        targets=[Name(
          id='fast_embedding',
          ctx=Store())],
        value=Call(
          func=Name(
            id='WordEmbeddings',
            ctx=Load()),
          args=[Str(s='en')],
          keywords=[])),
      Assign(
        targets=[Name(
          id='embeddings_models_list',
          ctx=Store())],
        value=List(
          elts=[Name(
            id='fast_embedding',
            ctx=Load())],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='embedding_model',
          ctx=Store())],
        value=Call(
          func=Name(
            id='StackedEmbeddings',
            ctx=Load()),
          args=[],
          keywords=[keyword(
            arg='embeddings',
            value=Name(
              id='embeddings_models_list',
              ctx=Load()))])),
      Assign(
        targets=[Name(
          id='total_embedding_length',
          ctx=Store())],
        value=Attribute(
          value=Name(
            id='embedding_model',
            ctx=Load()),
          attr='embedding_length',
          ctx=Load())),
      Assign(
        targets=[Name(
          id='__all__',
          ctx=Store())],
        value=List(
          elts=[
            Str(s='MobileNetV2'),
            Str(s='mobilenetv2_19')],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='input_size',
          ctx=Store())],
        value=Num(n=224)),
      Assign(
        targets=[Name(
          id='data_transforms',
          ctx=Store())],
        value=Dict(
          keys=[
            Str(s='train'),
            Str(s='val'),
            Str(s='test')],
          values=[
            Call(
              func=Attribute(
                value=Name(
                  id='transforms',
                  ctx=Load()),
                attr='Compose',
                ctx=Load()),
              args=[List(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Resize',
                      ctx=Load()),
                    args=[Name(
                      id='input_size',
                      ctx=Load())],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='ToTensor',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Normalize',
                      ctx=Load()),
                    args=[
                      List(
                        elts=[
                          Num(n=0.485),
                          Num(n=0.456),
                          Num(n=0.406)],
                        ctx=Load()),
                      List(
                        elts=[
                          Num(n=0.229),
                          Num(n=0.224),
                          Num(n=0.225)],
                        ctx=Load())],
                    keywords=[])],
                ctx=Load())],
              keywords=[]),
            Call(
              func=Attribute(
                value=Name(
                  id='transforms',
                  ctx=Load()),
                attr='Compose',
                ctx=Load()),
              args=[List(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Resize',
                      ctx=Load()),
                    args=[Name(
                      id='input_size',
                      ctx=Load())],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='ToTensor',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Normalize',
                      ctx=Load()),
                    args=[
                      List(
                        elts=[
                          Num(n=0.485),
                          Num(n=0.456),
                          Num(n=0.406)],
                        ctx=Load()),
                      List(
                        elts=[
                          Num(n=0.229),
                          Num(n=0.224),
                          Num(n=0.225)],
                        ctx=Load())],
                    keywords=[])],
                ctx=Load())],
              keywords=[]),
            Call(
              func=Attribute(
                value=Name(
                  id='transforms',
                  ctx=Load()),
                attr='Compose',
                ctx=Load()),
              args=[List(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Resize',
                      ctx=Load()),
                    args=[Name(
                      id='input_size',
                      ctx=Load())],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='ToTensor',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='transforms',
                        ctx=Load()),
                      attr='Normalize',
                      ctx=Load()),
                    args=[
                      List(
                        elts=[
                          Num(n=0.485),
                          Num(n=0.456),
                          Num(n=0.406)],
                        ctx=Load()),
                      List(
                        elts=[
                          Num(n=0.229),
                          Num(n=0.224),
                          Num(n=0.225)],
                        ctx=Load())],
                    keywords=[])],
                ctx=Load())],
              keywords=[])])),
      Assign(
        targets=[Name(
          id='train_dataset',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='H5',
              ctx=Load()),
            attr='H5Dataset',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='path',
              value=Name(
                id='hdf5_file_train',
                ctx=Load())),
            keyword(
              arg='data_transforms',
              value=Subscript(
                value=Name(
                  id='data_transforms',
                  ctx=Load()),
                slice=Index(value=Str(s='train')),
                ctx=Load())),
            keyword(
              arg='embedding_model',
              value=Name(
                id='embedding_model',
                ctx=Load())),
            keyword(
              arg='embeddings_combination',
              value=Name(
                id='combined_embeddings',
                ctx=Load())),
            keyword(
              arg='type_model',
              value=Name(
                id='full_model',
                ctx=Load())),
            keyword(
              arg='phase',
              value=Str(s='train'))])),
      Assign(
        targets=[Name(
          id='val_dataset',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='H5',
              ctx=Load()),
            attr='H5Dataset',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='path',
              value=Name(
                id='hdf5_file_val',
                ctx=Load())),
            keyword(
              arg='data_transforms',
              value=Subscript(
                value=Name(
                  id='data_transforms',
                  ctx=Load()),
                slice=Index(value=Str(s='val')),
                ctx=Load())),
            keyword(
              arg='embedding_model',
              value=Name(
                id='embedding_model',
                ctx=Load())),
            keyword(
              arg='embeddings_combination',
              value=Name(
                id='combined_embeddings',
                ctx=Load())),
            keyword(
              arg='type_model',
              value=Name(
                id='full_model',
                ctx=Load())),
            keyword(
              arg='phase',
              value=Str(s='val'))])),
      Assign(
        targets=[Name(
          id='test_dataset',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='H5',
              ctx=Load()),
            attr='H5Dataset',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='path',
              value=Name(
                id='hdf5_file_test',
                ctx=Load())),
            keyword(
              arg='data_transforms',
              value=Subscript(
                value=Name(
                  id='data_transforms',
                  ctx=Load()),
                slice=Index(value=Str(s='test')),
                ctx=Load())),
            keyword(
              arg='embedding_model',
              value=Name(
                id='embedding_model',
                ctx=Load())),
            keyword(
              arg='embeddings_combination',
              value=Name(
                id='combined_embeddings',
                ctx=Load())),
            keyword(
              arg='type_model',
              value=Name(
                id='full_model',
                ctx=Load())),
            keyword(
              arg='phase',
              value=Str(s='test'))])),
      Assign(
        targets=[Name(
          id='train_loader',
          ctx=Store())],
        value=Call(
          func=Name(
            id='DataLoader',
            ctx=Load()),
          args=[Name(
            id='train_dataset',
            ctx=Load())],
          keywords=[
            keyword(
              arg='batch_size',
              value=Name(
                id='batch_size',
                ctx=Load())),
            keyword(
              arg='shuffle',
              value=NameConstant(value=True)),
            keyword(
              arg='num_workers',
              value=Num(n=4)),
            keyword(
              arg='pin_memory',
              value=NameConstant(value=True))])),
      Assign(
        targets=[Name(
          id='val_loader',
          ctx=Store())],
        value=Call(
          func=Name(
            id='DataLoader',
            ctx=Load()),
          args=[Name(
            id='val_dataset',
            ctx=Load())],
          keywords=[
            keyword(
              arg='batch_size',
              value=Name(
                id='batch_size',
                ctx=Load())),
            keyword(
              arg='shuffle',
              value=NameConstant(value=True)),
            keyword(
              arg='num_workers',
              value=Num(n=4)),
            keyword(
              arg='pin_memory',
              value=NameConstant(value=True))])),
      Assign(
        targets=[Name(
          id='test_loader',
          ctx=Store())],
        value=Call(
          func=Name(
            id='DataLoader',
            ctx=Load()),
          args=[Name(
            id='test_dataset',
            ctx=Load())],
          keywords=[
            keyword(
              arg='batch_size',
              value=Num(n=1)),
            keyword(
              arg='shuffle',
              value=NameConstant(value=False)),
            keyword(
              arg='num_workers',
              value=Num(n=0))])),
      Assign(
        targets=[Name(
          id='dataloaders_dict',
          ctx=Store())],
        value=Dict(
          keys=[
            Str(s='train'),
            Str(s='val'),
            Str(s='test')],
          values=[
            Name(
              id='train_loader',
              ctx=Load()),
            Name(
              id='val_loader',
              ctx=Load()),
            Name(
              id='test_loader',
              ctx=Load())])),
      Assign(
        targets=[Name(
          id='feature_extracting',
          ctx=Store())],
        value=NameConstant(value=True)),
      Assign(
        targets=[Name(
          id='output_image_model',
          ctx=Store())],
        value=Num(n=300)),
      If(
        test=BoolOp(
          op=Or(),
          values=[
            Compare(
              left=Name(
                id='full_model',
                ctx=Load()),
              ops=[Eq()],
              comparators=[Str(s='combined')]),
            Compare(
              left=Name(
                id='full_model',
                ctx=Load()),
              ops=[Eq()],
              comparators=[Str(s='image')]),
            Compare(
              left=Name(
                id='full_model',
                ctx=Load()),
              ops=[Eq()],
              comparators=[Str(s='fusion')])]),
        body=[
          If(
            test=Compare(
              left=Name(
                id='image_model',
                ctx=Load()),
              ops=[Eq()],
              comparators=[Str(s='resnet')]),
            body=[
              Assign(
                targets=[Name(
                  id='use_pretrained',
                  ctx=Store())],
                value=NameConstant(value=True)),
              Assign(
                targets=[Name(
                  id='net',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='models',
                      ctx=Load()),
                    attr='resnet50',
                    ctx=Load()),
                  args=[],
                  keywords=[keyword(
                    arg='pretrained',
                    value=Name(
                      id='use_pretrained',
                      ctx=Load()))])),
              If(
                test=Compare(
                  left=Name(
                    id='image_training_type',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='feature_extract')]),
                body=[Expr(value=Call(
                  func=Name(
                    id='set_parameter_requires_grad',
                    ctx=Load()),
                  args=[
                    Name(
                      id='net',
                      ctx=Load()),
                    Name(
                      id='feature_extract',
                      ctx=Load())],
                  keywords=[]))],
                orelse=[]),
              Assign(
                targets=[Name(
                  id='num_ftrs',
                  ctx=Store())],
                value=Attribute(
                  value=Attribute(
                    value=Name(
                      id='net',
                      ctx=Load()),
                    attr='fc',
                    ctx=Load()),
                  attr='in_features',
                  ctx=Load())),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='net',
                    ctx=Load()),
                  attr='fc',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Linear',
                    ctx=Load()),
                  args=[
                    Name(
                      id='num_ftrs',
                      ctx=Load()),
                    Name(
                      id='output_image_model',
                      ctx=Load())],
                  keywords=[]))],
            orelse=[]),
          If(
            test=Compare(
              left=Name(
                id='full_model',
                ctx=Load()),
              ops=[Eq()],
              comparators=[Str(s='image')]),
            body=[
              Assign(
                targets=[Name(
                  id='PATH_best',
                  ctx=Store())],
                value=BinOp(
                  left=BinOp(
                    left=BinOp(
                      left=BinOp(
                        left=BinOp(
                          left=Name(
                            id='model_path',
                            ctx=Load()),
                          op=Add(),
                          right=Str(s='image/')),
                        op=Add(),
                        right=Call(
                          func=Name(
                            id='str',
                            ctx=Load()),
                          args=[Name(
                            id='max_epochs',
                            ctx=Load())],
                          keywords=[])),
                      op=Add(),
                      right=Call(
                        func=Name(
                          id='str',
                          ctx=Load()),
                        args=[Name(
                          id='learning_rate',
                          ctx=Load())],
                        keywords=[])),
                    op=Add(),
                    right=Name(
                      id='description',
                      ctx=Load())),
                  op=Add(),
                  right=Str(s='.pt'))),
              If(
                test=BoolOp(
                  op=Or(),
                  values=[
                    Compare(
                      left=Name(
                        id='image_model',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='mobilenetv2')]),
                    Str(s='dense')]),
                body=[Assign(
                  targets=[Attribute(
                    value=Name(
                      id='net',
                      ctx=Load()),
                    attr='classifier',
                    ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(
                        id='nn',
                        ctx=Load()),
                      attr='Linear',
                      ctx=Load()),
                    args=[
                      Name(
                        id='num_ftrs',
                        ctx=Load()),
                      Name(
                        id='num_classes',
                        ctx=Load())],
                    keywords=[]))],
                orelse=[If(
                  test=Compare(
                    left=Name(
                      id='image_model',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='efficientnet')]),
                  body=[Assign(
                    targets=[Attribute(
                      value=Name(
                        id='net',
                        ctx=Load()),
                      attr='_fc',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='nn',
                          ctx=Load()),
                        attr='Linear',
                        ctx=Load()),
                      args=[
                        Name(
                          id='num_ftrs',
                          ctx=Load()),
                        Name(
                          id='num_classes',
                          ctx=Load())],
                      keywords=[]))],
                  orelse=[If(
                    test=Compare(
                      left=Name(
                        id='image_model',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='resnet')]),
                    body=[Assign(
                      targets=[Attribute(
                        value=Name(
                          id='net',
                          ctx=Load()),
                        attr='fc',
                        ctx=Store())],
                      value=Call(
                        func=Attribute(
                          value=Name(
                            id='nn',
                            ctx=Load()),
                          attr='Linear',
                          ctx=Load()),
                        args=[
                          Name(
                            id='num_ftrs',
                            ctx=Load()),
                          Name(
                            id='num_classes',
                            ctx=Load())],
                        keywords=[]))],
                    orelse=[])])]),
              Assign(
                targets=[Name(
                  id='model',
                  ctx=Store())],
                value=Name(
                  id='net',
                  ctx=Load()))],
            orelse=[])],
        orelse=[]),
      Assign(
        targets=[Name(
          id='model',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='model',
              ctx=Load()),
            attr='to',
            ctx=Load()),
          args=[Name(
            id='device',
            ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='criterion',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='nn',
              ctx=Load()),
            attr='CrossEntropyLoss',
            ctx=Load()),
          args=[],
          keywords=[])),
      Assign(
        targets=[Name(
          id='optimizer',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='optim',
              ctx=Load()),
            attr='SGD',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='parameters',
              ctx=Load()),
            args=[],
            keywords=[])],
          keywords=[
            keyword(
              arg='lr',
              value=Name(
                id='learning_rate',
                ctx=Load())),
            keyword(
              arg='momentum',
              value=Num(n=0.9)),
            keyword(
              arg='weight_decay',
              value=Num(n=4e-05))])),
      If(
        test=Compare(
          left=Name(
            id='full_model',
            ctx=Load()),
          ops=[Eq()],
          comparators=[Str(s='image')]),
        body=[Assign(
          targets=[Name(
            id='scheduler',
            ctx=Store())],
          value=Call(
            func=Name(
              id='ReduceLROnPlateau',
              ctx=Load()),
            args=[
              Name(
                id='optimizer',
                ctx=Load()),
              Str(s='min')],
            keywords=[
              keyword(
                arg='patience',
                value=Num(n=4)),
              keyword(
                arg='factor',
                value=Num(n=0.5))]))],
        orelse=[Assign(
          targets=[Name(
            id='scheduler',
            ctx=Store())],
          value=Call(
            func=Name(
              id='ReduceLROnPlateau',
              ctx=Load()),
            args=[
              Name(
                id='optimizer',
                ctx=Load()),
              Str(s='min')],
            keywords=[
              keyword(
                arg='patience',
                value=Num(n=8)),
              keyword(
                arg='factor',
                value=Num(n=0.5))]))]),
      FunctionDef(
        name='get_lr',
        args=arguments(
          args=[arg(
            arg='optimizer',
            annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[For(
          target=Name(
            id='param_group',
            ctx=Store()),
          iter=Attribute(
            value=Name(
              id='optimizer',
              ctx=Load()),
            attr='param_groups',
            ctx=Load()),
          body=[Return(value=Subscript(
            value=Name(
              id='param_group',
              ctx=Load()),
            slice=Index(value=Str(s='lr')),
            ctx=Load()))],
          orelse=[])],
        decorator_list=[],
        returns=None),
      Assign(
        targets=[Name(
          id='loss_values',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='epoch_values',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='val_acc_history',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='best_model_wts',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='copy',
              ctx=Load()),
            attr='deepcopy',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='state_dict',
              ctx=Load()),
            args=[],
            keywords=[])],
          keywords=[])),
      Assign(
        targets=[Name(
          id='best_acc',
          ctx=Store())],
        value=Num(n=0.0)),
      For(
        target=Name(
          id='epoch',
          ctx=Store()),
        iter=Call(
          func=Name(
            id='range',
            ctx=Load()),
          args=[Name(
            id='max_epochs',
            ctx=Load())],
          keywords=[]),
        body=[
          Assign(
            targets=[Name(
              id='since',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='time',
                  ctx=Load()),
                attr='time',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Name(
              id='steps',
              ctx=Store())],
            value=Num(n=0)),
          Assign(
            targets=[Name(
              id='correct',
              ctx=Store())],
            value=Num(n=0)),
          Assign(
            targets=[Name(
              id='confusion_matrix',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='torch',
                  ctx=Load()),
                attr='zeros',
                ctx=Load()),
              args=[
                Name(
                  id='num_classes',
                  ctx=Load()),
                Name(
                  id='num_classes',
                  ctx=Load())],
              keywords=[])),
          For(
            target=Name(
              id='phase',
              ctx=Store()),
            iter=List(
              elts=[Str(s='train')],
              ctx=Load()),
            body=[
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='train')]),
                body=[Expr(value=Call(
                  func=Attribute(
                    value=Name(
                      id='model',
                      ctx=Load()),
                    attr='train',
                    ctx=Load()),
                  args=[],
                  keywords=[]))],
                orelse=[Expr(value=Call(
                  func=Attribute(
                    value=Name(
                      id='model',
                      ctx=Load()),
                    attr='eval',
                    ctx=Load()),
                  args=[],
                  keywords=[]))]),
              Assign(
                targets=[Name(
                  id='running_loss',
                  ctx=Store())],
                value=Num(n=0.0)),
              Assign(
                targets=[Name(
                  id='running_corrects',
                  ctx=Store())],
                value=Num(n=0)),
              Assign(
                targets=[Name(
                  id='batch_counter',
                  ctx=Store())],
                value=Num(n=0)),
              For(
                target=Name(
                  id='local_batch',
                  ctx=Store()),
                iter=Subscript(
                  value=Name(
                    id='dataloaders_dict',
                    ctx=Load()),
                  slice=Index(value=Name(
                    id='phase',
                    ctx=Load())),
                  ctx=Load()),
                body=[
                  Assign(
                    targets=[Name(
                      id='batchs_number',
                      ctx=Store())],
                    value=BinOp(
                      left=Call(
                        func=Name(
                          id='len',
                          ctx=Load()),
                        args=[Attribute(
                          value=Subscript(
                            value=Name(
                              id='dataloaders_dict',
                              ctx=Load()),
                            slice=Index(value=Name(
                              id='phase',
                              ctx=Load())),
                            ctx=Load()),
                          attr='dataset',
                          ctx=Load())],
                        keywords=[]),
                      op=Div(),
                      right=Name(
                        id='batch_size',
                        ctx=Load()))),
                  AugAssign(
                    target=Name(
                      id='batch_counter',
                      ctx=Store()),
                    op=Add(),
                    value=Num(n=1)),
                  If(
                    test=Compare(
                      left=BinOp(
                        left=Name(
                          id='batch_counter',
                          ctx=Load()),
                        op=Mod(),
                        right=Num(n=1000)),
                      ops=[Eq()],
                      comparators=[Num(n=0)]),
                    body=[Expr(value=Call(
                      func=Name(
                        id='print',
                        ctx=Load()),
                      args=[
                        Str(s='batch counter'),
                        Name(
                          id='batch_counter',
                          ctx=Load())],
                      keywords=[]))],
                    orelse=[]),
                  If(
                    test=Compare(
                      left=Name(
                        id='text_model',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='documentRNN')]),
                    body=[
                      Assign(
                        targets=[Tuple(
                          elts=[
                            Name(
                              id='ocr_text',
                              ctx=Store()),
                            Name(
                              id='labels',
                              ctx=Store())],
                          ctx=Store())],
                        value=Tuple(
                          elts=[
                            Subscript(
                              value=Name(
                                id='local_batch',
                                ctx=Load()),
                              slice=Index(value=Str(s='ocr')),
                              ctx=Load()),
                            Call(
                              func=Name(
                                id='Variable',
                                ctx=Load()),
                              args=[Subscript(
                                value=Name(
                                  id='local_batch',
                                  ctx=Load()),
                                slice=Index(value=Str(s='class')),
                                ctx=Load())],
                              keywords=[])],
                          ctx=Load())),
                      Assign(
                        targets=[Name(
                          id='tokenized_sentences',
                          ctx=Store())],
                        value=List(
                          elts=[],
                          ctx=Load())),
                      For(
                        target=Name(
                          id='sentence',
                          ctx=Store()),
                        iter=Name(
                          id='ocr_text',
                          ctx=Load()),
                        body=[
                          Assign(
                            targets=[Name(
                              id='sentence_tokenized',
                              ctx=Store())],
                            value=Call(
                              func=Name(
                                id='Sentence',
                                ctx=Load()),
                              args=[Name(
                                id='sentence',
                                ctx=Load())],
                              keywords=[keyword(
                                arg='use_tokenizer',
                                value=NameConstant(value=True))])),
                          Expr(value=Call(
                            func=Attribute(
                              value=Name(
                                id='tokenized_sentences',
                                ctx=Load()),
                              attr='append',
                              ctx=Load()),
                            args=[Name(
                              id='sentence_tokenized',
                              ctx=Load())],
                            keywords=[])),
                          Assign(
                            targets=[Name(
                              id='ocr_text',
                              ctx=Store())],
                            value=Name(
                              id='tokenized_sentences',
                              ctx=Load()))],
                        orelse=[]),
                      Assign(
                        targets=[Name(
                          id='labels',
                          ctx=Store())],
                        value=Call(
                          func=Attribute(
                            value=Name(
                              id='labels',
                              ctx=Load()),
                            attr='to',
                            ctx=Load()),
                          args=[Name(
                            id='device',
                            ctx=Load())],
                          keywords=[]))],
                    orelse=[
                      Assign(
                        targets=[Tuple(
                          elts=[
                            Name(
                              id='image',
                              ctx=Store()),
                            Name(
                              id='ocr_text',
                              ctx=Store()),
                            Name(
                              id='labels',
                              ctx=Store())],
                          ctx=Store())],
                        value=Tuple(
                          elts=[
                            Call(
                              func=Name(
                                id='Variable',
                                ctx=Load()),
                              args=[Subscript(
                                value=Name(
                                  id='local_batch',
                                  ctx=Load()),
                                slice=Index(value=Str(s='image')),
                                ctx=Load())],
                              keywords=[]),
                            Call(
                              func=Name(
                                id='Variable',
                                ctx=Load()),
                              args=[Subscript(
                                value=Name(
                                  id='local_batch',
                                  ctx=Load()),
                                slice=Index(value=Str(s='ocr')),
                                ctx=Load())],
                              keywords=[]),
                            Call(
                              func=Name(
                                id='Variable',
                                ctx=Load()),
                              args=[Subscript(
                                value=Name(
                                  id='local_batch',
                                  ctx=Load()),
                                slice=Index(value=Str(s='class')),
                                ctx=Load())],
                              keywords=[])],
                          ctx=Load())),
                      Assign(
                        targets=[Tuple(
                          elts=[
                            Name(
                              id='image',
                              ctx=Store()),
                            Name(
                              id='ocr_text',
                              ctx=Store()),
                            Name(
                              id='labels',
                              ctx=Store())],
                          ctx=Store())],
                        value=Tuple(
                          elts=[
                            Call(
                              func=Attribute(
                                value=Name(
                                  id='image',
                                  ctx=Load()),
                                attr='to',
                                ctx=Load()),
                              args=[Name(
                                id='device',
                                ctx=Load())],
                              keywords=[]),
                            Call(
                              func=Attribute(
                                value=Name(
                                  id='ocr_text',
                                  ctx=Load()),
                                attr='to',
                                ctx=Load()),
                              args=[Name(
                                id='device',
                                ctx=Load())],
                              keywords=[]),
                            Call(
                              func=Attribute(
                                value=Name(
                                  id='labels',
                                  ctx=Load()),
                                attr='to',
                                ctx=Load()),
                              args=[Name(
                                id='device',
                                ctx=Load())],
                              keywords=[])],
                          ctx=Load()))]),
                  AugAssign(
                    target=Name(
                      id='steps',
                      ctx=Store()),
                    op=Add(),
                    value=Num(n=1)),
                  Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='optimizer',
                        ctx=Load()),
                      attr='zero_grad',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                  If(
                    test=BoolOp(
                      op=Or(),
                      values=[
                        Compare(
                          left=Name(
                            id='full_model',
                            ctx=Load()),
                          ops=[Eq()],
                          comparators=[Str(s='combined')]),
                        Compare(
                          left=Name(
                            id='full_model',
                            ctx=Load()),
                          ops=[Eq()],
                          comparators=[Str(s='fusion')])]),
                    body=[Assign(
                      targets=[Name(
                        id='outputs',
                        ctx=Store())],
                      value=Call(
                        func=Name(
                          id='model',
                          ctx=Load()),
                        args=[
                          Name(
                            id='ocr_text',
                            ctx=Load()),
                          Name(
                            id='image',
                            ctx=Load())],
                        keywords=[]))],
                    orelse=[If(
                      test=Compare(
                        left=Name(
                          id='full_model',
                          ctx=Load()),
                        ops=[Eq()],
                        comparators=[Str(s='image')]),
                      body=[Assign(
                        targets=[Name(
                          id='outputs',
                          ctx=Store())],
                        value=Call(
                          func=Name(
                            id='model',
                            ctx=Load()),
                          args=[Name(
                            id='image',
                            ctx=Load())],
                          keywords=[]))],
                      orelse=[If(
                        test=Compare(
                          left=Name(
                            id='full_model',
                            ctx=Load()),
                          ops=[Eq()],
                          comparators=[Str(s='text')]),
                        body=[Assign(
                          targets=[Name(
                            id='outputs',
                            ctx=Store())],
                          value=Call(
                            func=Name(
                              id='model',
                              ctx=Load()),
                            args=[Name(
                              id='ocr_text',
                              ctx=Load())],
                            keywords=[]))],
                        orelse=[])])]),
                  Assign(
                    targets=[Tuple(
                      elts=[
                        Name(
                          id='_',
                          ctx=Store()),
                        Name(
                          id='preds',
                          ctx=Store())],
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='torch',
                          ctx=Load()),
                        attr='max',
                        ctx=Load()),
                      args=[
                        Attribute(
                          value=Name(
                            id='outputs',
                            ctx=Load()),
                          attr='data',
                          ctx=Load()),
                        Num(n=1)],
                      keywords=[])),
                  Assign(
                    targets=[Name(
                      id='labels',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='labels',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  Assign(
                    targets=[Name(
                      id='loss',
                      ctx=Store())],
                    value=Call(
                      func=Name(
                        id='criterion',
                        ctx=Load()),
                      args=[
                        Name(
                          id='outputs',
                          ctx=Load()),
                        Name(
                          id='labels',
                          ctx=Load())],
                      keywords=[])),
                  AugAssign(
                    target=Name(
                      id='running_corrects',
                      ctx=Store()),
                    op=Add(),
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='torch',
                          ctx=Load()),
                        attr='sum',
                        ctx=Load()),
                      args=[Compare(
                        left=Name(
                          id='preds',
                          ctx=Load()),
                        ops=[Eq()],
                        comparators=[Attribute(
                          value=Name(
                            id='labels',
                            ctx=Load()),
                          attr='data',
                          ctx=Load())])],
                      keywords=[])),
                  If(
                    test=Compare(
                      left=Name(
                        id='phase',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='val')]),
                    body=[For(
                      target=Tuple(
                        elts=[
                          Name(
                            id='t',
                            ctx=Store()),
                          Name(
                            id='p',
                            ctx=Store())],
                        ctx=Store()),
                      iter=Call(
                        func=Name(
                          id='zip',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Name(
                                id='labels',
                                ctx=Load()),
                              attr='view',
                              ctx=Load()),
                            args=[UnaryOp(
                              op=USub(),
                              operand=Num(n=1))],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Name(
                                id='preds',
                                ctx=Load()),
                              attr='view',
                              ctx=Load()),
                            args=[UnaryOp(
                              op=USub(),
                              operand=Num(n=1))],
                            keywords=[])],
                        keywords=[]),
                      body=[
                        AugAssign(
                          target=Subscript(
                            value=Name(
                              id='confusion_matrix',
                              ctx=Load()),
                            slice=Index(value=Tuple(
                              elts=[
                                Call(
                                  func=Attribute(
                                    value=Name(
                                      id='t',
                                      ctx=Load()),
                                    attr='long',
                                    ctx=Load()),
                                  args=[],
                                  keywords=[]),
                                Call(
                                  func=Attribute(
                                    value=Name(
                                      id='p',
                                      ctx=Load()),
                                    attr='long',
                                    ctx=Load()),
                                  args=[],
                                  keywords=[])],
                              ctx=Load())),
                            ctx=Store()),
                          op=Add(),
                          value=Num(n=1)),
                        If(
                          test=Compare(
                            left=Call(
                              func=Attribute(
                                value=Name(
                                  id='t',
                                  ctx=Load()),
                                attr='long',
                                ctx=Load()),
                              args=[],
                              keywords=[]),
                            ops=[Eq()],
                            comparators=[Call(
                              func=Attribute(
                                value=Name(
                                  id='p',
                                  ctx=Load()),
                                attr='long',
                                ctx=Load()),
                              args=[],
                              keywords=[])]),
                          body=[AugAssign(
                            target=Name(
                              id='correct',
                              ctx=Store()),
                            op=Add(),
                            value=Num(n=1))],
                          orelse=[])],
                      orelse=[])],
                    orelse=[]),
                  If(
                    test=Compare(
                      left=Name(
                        id='phase',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='train')]),
                    body=[
                      Expr(value=Call(
                        func=Attribute(
                          value=Name(
                            id='loss',
                            ctx=Load()),
                          attr='backward',
                          ctx=Load()),
                        args=[],
                        keywords=[])),
                      Expr(value=Call(
                        func=Attribute(
                          value=Name(
                            id='optimizer',
                            ctx=Load()),
                          attr='step',
                          ctx=Load()),
                        args=[],
                        keywords=[]))],
                    orelse=[]),
                  AugAssign(
                    target=Name(
                      id='running_loss',
                      ctx=Store()),
                    op=Add(),
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='loss',
                          ctx=Load()),
                        attr='item',
                        ctx=Load()),
                      args=[],
                      keywords=[]))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[If(
                  test=Compare(
                    left=BinOp(
                      left=Name(
                        id='epoch',
                        ctx=Load()),
                      op=Add(),
                      right=Num(n=1)),
                    ops=[Eq()],
                    comparators=[Name(
                      id='max_epochs',
                      ctx=Load())]),
                  body=[
                    Expr(value=Call(
                      func=Name(
                        id='print',
                        ctx=Load()),
                      args=[Name(
                        id='confusion_matrix',
                        ctx=Load())],
                      keywords=[])),
                    Expr(value=Call(
                      func=Name(
                        id='print',
                        ctx=Load()),
                      args=[BinOp(
                        left=Call(
                          func=Attribute(
                            value=Name(
                              id='confusion_matrix',
                              ctx=Load()),
                            attr='diag',
                            ctx=Load()),
                          args=[],
                          keywords=[]),
                        op=Div(),
                        right=Call(
                          func=Attribute(
                            value=Name(
                              id='confusion_matrix',
                              ctx=Load()),
                            attr='sum',
                            ctx=Load()),
                          args=[Num(n=1)],
                          keywords=[]))],
                      keywords=[]))],
                  orelse=[])],
                orelse=[]),
              Assign(
                targets=[Name(
                  id='epoch_loss',
                  ctx=Store())],
                value=BinOp(
                  left=Name(
                    id='running_loss',
                    ctx=Load()),
                  op=Div(),
                  right=Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Attribute(
                      value=Subscript(
                        value=Name(
                          id='dataloaders_dict',
                          ctx=Load()),
                        slice=Index(value=Name(
                          id='phase',
                          ctx=Load())),
                        ctx=Load()),
                      attr='dataset',
                      ctx=Load())],
                    keywords=[]))),
              Assign(
                targets=[Name(
                  id='epoch_acc',
                  ctx=Store())],
                value=BinOp(
                  left=Call(
                    func=Attribute(
                      value=Name(
                        id='running_corrects',
                        ctx=Load()),
                      attr='double',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  op=Div(),
                  right=Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Attribute(
                      value=Subscript(
                        value=Name(
                          id='dataloaders_dict',
                          ctx=Load()),
                        slice=Index(value=Name(
                          id='phase',
                          ctx=Load())),
                        ctx=Load()),
                      attr='dataset',
                      ctx=Load())],
                    keywords=[]))),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='train')]),
                body=[Assign(
                  targets=[Name(
                    id='train_loss',
                    ctx=Store())],
                  value=Name(
                    id='epoch_loss',
                    ctx=Load()))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[Assign(
                  targets=[Name(
                    id='val_loss',
                    ctx=Store())],
                  value=Name(
                    id='epoch_loss',
                    ctx=Load()))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[If(
                  test=Compare(
                    left=Name(
                      id='full_model',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='image')]),
                  body=[Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='scheduler',
                        ctx=Load()),
                      attr='step',
                      ctx=Load()),
                    args=[Name(
                      id='epoch_loss',
                      ctx=Load())],
                    keywords=[]))],
                  orelse=[Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='scheduler',
                        ctx=Load()),
                      attr='step',
                      ctx=Load()),
                    args=[Name(
                      id='epoch_loss',
                      ctx=Load())],
                    keywords=[]))])],
                orelse=[]),
              Assign(
                targets=[Name(
                  id='actual_lr',
                  ctx=Store())],
                value=Call(
                  func=Name(
                    id='get_lr',
                    ctx=Load()),
                  args=[Name(
                    id='optimizer',
                    ctx=Load())],
                  keywords=[])),
              Expr(value=Call(
                func=Name(
                  id='print',
                  ctx=Load()),
                args=[Call(
                  func=Attribute(
                    value=Str(s='[Epoch {}/{}] {} lr: {:.4f}, Loss: {:.4f} Acc: {:.4f}'),
                    attr='format',
                    ctx=Load()),
                  args=[
                    Name(
                      id='epoch',
                      ctx=Load()),
                    Name(
                      id='max_epochs',
                      ctx=Load()),
                    Name(
                      id='phase',
                      ctx=Load()),
                    Name(
                      id='actual_lr',
                      ctx=Load()),
                    Name(
                      id='epoch_loss',
                      ctx=Load()),
                    Name(
                      id='epoch_acc',
                      ctx=Load())],
                  keywords=[])],
                keywords=[])),
              If(
                test=BoolOp(
                  op=And(),
                  values=[
                    Compare(
                      left=Name(
                        id='phase',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='val')]),
                    Compare(
                      left=Name(
                        id='epoch_acc',
                        ctx=Load()),
                      ops=[Gt()],
                      comparators=[Name(
                        id='best_acc',
                        ctx=Load())])]),
                body=[
                  Assign(
                    targets=[Name(
                      id='best_acc',
                      ctx=Store())],
                    value=Name(
                      id='epoch_acc',
                      ctx=Load())),
                  Assign(
                    targets=[Name(
                      id='best_model_wts',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='copy',
                          ctx=Load()),
                        attr='deepcopy',
                        ctx=Load()),
                      args=[Call(
                        func=Attribute(
                          value=Name(
                            id='model',
                            ctx=Load()),
                          attr='state_dict',
                          ctx=Load()),
                        args=[],
                        keywords=[])],
                      keywords=[]))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[Expr(value=Call(
                  func=Attribute(
                    value=Name(
                      id='val_acc_history',
                      ctx=Load()),
                    attr='append',
                    ctx=Load()),
                  args=[Name(
                    id='epoch_acc',
                    ctx=Load())],
                  keywords=[]))],
                orelse=[])],
            orelse=[]),
          Assign(
            targets=[Name(
              id='PATH_final',
              ctx=Store())],
            value=BinOp(
              left=BinOp(
                left=BinOp(
                  left=BinOp(
                    left=BinOp(
                      left=BinOp(
                        left=Name(
                          id='model_path',
                          ctx=Load()),
                        op=Add(),
                        right=Name(
                          id='full_model',
                          ctx=Load())),
                      op=Add(),
                      right=Str(s='/')),
                    op=Add(),
                    right=Call(
                      func=Name(
                        id='str',
                        ctx=Load()),
                      args=[Name(
                        id='max_epochs',
                        ctx=Load())],
                      keywords=[])),
                  op=Add(),
                  right=Call(
                    func=Name(
                      id='str',
                      ctx=Load()),
                    args=[Name(
                      id='learning_rate',
                      ctx=Load())],
                    keywords=[])),
                op=Add(),
                right=Name(
                  id='description',
                  ctx=Load())),
              op=Add(),
              right=Str(s='final.pt'))),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Name(
              id='time_elapsed',
              ctx=Store())],
            value=BinOp(
              left=Call(
                func=Attribute(
                  value=Name(
                    id='time',
                    ctx=Load()),
                  attr='time',
                  ctx=Load()),
                args=[],
                keywords=[]),
              op=Sub(),
              right=Name(
                id='since',
                ctx=Load()))),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[Call(
              func=Attribute(
                value=Str(s='Training completed in {:.0f}m {:.0f}s'),
                attr='format',
                ctx=Load()),
              args=[
                BinOp(
                  left=Name(
                    id='time_elapsed',
                    ctx=Load()),
                  op=FloorDiv(),
                  right=Num(n=60)),
                BinOp(
                  left=Name(
                    id='time_elapsed',
                    ctx=Load()),
                  op=Mod(),
                  right=Num(n=60))],
              keywords=[])],
            keywords=[])),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[Call(
              func=Attribute(
                value=Str(s='Best val Acc: {:4f}'),
                attr='format',
                ctx=Load()),
              args=[Name(
                id='best_acc',
                ctx=Load())],
              keywords=[])],
            keywords=[]))],
        orelse=[]),
      Assign(
        targets=[Name(
          id='num_classes',
          ctx=Store())],
        value=Num(n=16)),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[Str(s='Testing...')],
        keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='eval',
          ctx=Load()),
        args=[],
        keywords=[])),
      Assign(
        targets=[Name(
          id='correct',
          ctx=Store())],
        value=Num(n=0)),
      Assign(
        targets=[Name(
          id='max_size',
          ctx=Store())],
        value=Num(n=0)),
      Assign(
        targets=[Name(
          id='confusion_matrix',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='zeros',
            ctx=Load()),
          args=[
            Name(
              id='num_classes',
              ctx=Load()),
            Name(
              id='num_classes',
              ctx=Load())],
          keywords=[])),
      With(
        items=[withitem(
          context_expr=Call(
            func=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='no_grad',
              ctx=Load()),
            args=[],
            keywords=[]),
          optional_vars=None)],
        body=[For(
          target=Tuple(
            elts=[
              Name(
                id='i',
                ctx=Store()),
              Name(
                id='local_batch',
                ctx=Store())],
            ctx=Store()),
          iter=Call(
            func=Name(
              id='enumerate',
              ctx=Load()),
            args=[Name(
              id='test_loader',
              ctx=Load())],
            keywords=[]),
          body=[
            If(
              test=Compare(
                left=Name(
                  id='text_model',
                  ctx=Load()),
                ops=[Eq()],
                comparators=[Str(s='documentRNN')]),
              body=[
                Assign(
                  targets=[Tuple(
                    elts=[
                      Name(
                        id='ocr_text',
                        ctx=Store()),
                      Name(
                        id='labels',
                        ctx=Store())],
                    ctx=Store())],
                  value=Tuple(
                    elts=[
                      Subscript(
                        value=Name(
                          id='local_batch',
                          ctx=Load()),
                        slice=Index(value=Str(s='ocr')),
                        ctx=Load()),
                      Call(
                        func=Name(
                          id='Variable',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='local_batch',
                            ctx=Load()),
                          slice=Index(value=Str(s='class')),
                          ctx=Load())],
                        keywords=[])],
                    ctx=Load())),
                Assign(
                  targets=[Name(
                    id='tokenized_sentences',
                    ctx=Store())],
                  value=List(
                    elts=[],
                    ctx=Load())),
                For(
                  target=Name(
                    id='sentence',
                    ctx=Store()),
                  iter=Name(
                    id='ocr_text',
                    ctx=Load()),
                  body=[
                    Assign(
                      targets=[Name(
                        id='sentence_tokenized',
                        ctx=Store())],
                      value=Call(
                        func=Name(
                          id='Sentence',
                          ctx=Load()),
                        args=[Name(
                          id='sentence',
                          ctx=Load())],
                        keywords=[keyword(
                          arg='use_tokenizer',
                          value=NameConstant(value=True))])),
                    Expr(value=Call(
                      func=Attribute(
                        value=Name(
                          id='tokenized_sentences',
                          ctx=Load()),
                        attr='append',
                        ctx=Load()),
                      args=[Name(
                        id='sentence_tokenized',
                        ctx=Load())],
                      keywords=[])),
                    Assign(
                      targets=[Name(
                        id='ocr_text',
                        ctx=Store())],
                      value=Name(
                        id='tokenized_sentences',
                        ctx=Load()))],
                  orelse=[]),
                Assign(
                  targets=[Name(
                    id='labels',
                    ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(
                        id='labels',
                        ctx=Load()),
                      attr='to',
                      ctx=Load()),
                    args=[Name(
                      id='device',
                      ctx=Load())],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[Tuple(
                    elts=[
                      Name(
                        id='image',
                        ctx=Store()),
                      Name(
                        id='ocr_text',
                        ctx=Store()),
                      Name(
                        id='labels',
                        ctx=Store())],
                    ctx=Store())],
                  value=Tuple(
                    elts=[
                      Call(
                        func=Name(
                          id='Variable',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='local_batch',
                            ctx=Load()),
                          slice=Index(value=Str(s='image')),
                          ctx=Load())],
                        keywords=[]),
                      Call(
                        func=Name(
                          id='Variable',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='local_batch',
                            ctx=Load()),
                          slice=Index(value=Str(s='ocr')),
                          ctx=Load())],
                        keywords=[]),
                      Call(
                        func=Name(
                          id='Variable',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='local_batch',
                            ctx=Load()),
                          slice=Index(value=Str(s='class')),
                          ctx=Load())],
                        keywords=[])],
                    ctx=Load())),
                Assign(
                  targets=[Tuple(
                    elts=[
                      Name(
                        id='image',
                        ctx=Store()),
                      Name(
                        id='ocr_text',
                        ctx=Store()),
                      Name(
                        id='labels',
                        ctx=Store())],
                    ctx=Store())],
                  value=Tuple(
                    elts=[
                      Call(
                        func=Attribute(
                          value=Name(
                            id='image',
                            ctx=Load()),
                          attr='to',
                          ctx=Load()),
                        args=[Name(
                          id='device',
                          ctx=Load())],
                        keywords=[]),
                      Call(
                        func=Attribute(
                          value=Name(
                            id='ocr_text',
                            ctx=Load()),
                          attr='to',
                          ctx=Load()),
                        args=[Name(
                          id='device',
                          ctx=Load())],
                        keywords=[]),
                      Call(
                        func=Attribute(
                          value=Name(
                            id='labels',
                            ctx=Load()),
                          attr='to',
                          ctx=Load()),
                        args=[Name(
                          id='device',
                          ctx=Load())],
                        keywords=[])],
                    ctx=Load()))]),
            If(
              test=Compare(
                left=BinOp(
                  left=Name(
                    id='i',
                    ctx=Load()),
                  op=Mod(),
                  right=Num(n=400)),
                ops=[Eq()],
                comparators=[Num(n=0)]),
              body=[Expr(value=Call(
                func=Name(
                  id='print',
                  ctx=Load()),
                args=[Name(
                  id='i',
                  ctx=Load())],
                keywords=[]))],
              orelse=[]),
            If(
              test=BoolOp(
                op=Or(),
                values=[
                  Compare(
                    left=Name(
                      id='full_model',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='combined')]),
                  Compare(
                    left=Name(
                      id='full_model',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='fusion')])]),
              body=[Assign(
                targets=[Name(
                  id='outputs',
                  ctx=Store())],
                value=Call(
                  func=Name(
                    id='model',
                    ctx=Load()),
                  args=[
                    Name(
                      id='ocr_text',
                      ctx=Load()),
                    Name(
                      id='image',
                      ctx=Load())],
                  keywords=[]))],
              orelse=[If(
                test=Compare(
                  left=Name(
                    id='full_model',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='image')]),
                body=[Assign(
                  targets=[Name(
                    id='outputs',
                    ctx=Store())],
                  value=Call(
                    func=Name(
                      id='model',
                      ctx=Load()),
                    args=[Name(
                      id='image',
                      ctx=Load())],
                    keywords=[]))],
                orelse=[If(
                  test=Compare(
                    left=Name(
                      id='full_model',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='text')]),
                  body=[Assign(
                    targets=[Name(
                      id='outputs',
                      ctx=Store())],
                    value=Call(
                      func=Name(
                        id='model',
                        ctx=Load()),
                      args=[Name(
                        id='ocr_text',
                        ctx=Load())],
                      keywords=[]))],
                  orelse=[])])]),
            Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='_',
                    ctx=Store()),
                  Name(
                    id='preds',
                    ctx=Store())],
                ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(
                    id='torch',
                    ctx=Load()),
                  attr='max',
                  ctx=Load()),
                args=[
                  Attribute(
                    value=Name(
                      id='outputs',
                      ctx=Load()),
                    attr='data',
                    ctx=Load()),
                  Num(n=1)],
                keywords=[])),
            For(
              target=Tuple(
                elts=[
                  Name(
                    id='t',
                    ctx=Store()),
                  Name(
                    id='p',
                    ctx=Store())],
                ctx=Store()),
              iter=Call(
                func=Name(
                  id='zip',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='labels',
                        ctx=Load()),
                      attr='view',
                      ctx=Load()),
                    args=[UnaryOp(
                      op=USub(),
                      operand=Num(n=1))],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='preds',
                        ctx=Load()),
                      attr='view',
                      ctx=Load()),
                    args=[UnaryOp(
                      op=USub(),
                      operand=Num(n=1))],
                    keywords=[])],
                keywords=[]),
              body=[
                AugAssign(
                  target=Subscript(
                    value=Name(
                      id='confusion_matrix',
                      ctx=Load()),
                    slice=Index(value=Tuple(
                      elts=[
                        Call(
                          func=Attribute(
                            value=Name(
                              id='t',
                              ctx=Load()),
                            attr='long',
                            ctx=Load()),
                          args=[],
                          keywords=[]),
                        Call(
                          func=Attribute(
                            value=Name(
                              id='p',
                              ctx=Load()),
                            attr='long',
                            ctx=Load()),
                          args=[],
                          keywords=[])],
                      ctx=Load())),
                    ctx=Store()),
                  op=Add(),
                  value=Num(n=1)),
                If(
                  test=Compare(
                    left=Call(
                      func=Attribute(
                        value=Name(
                          id='t',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[]),
                    ops=[Eq()],
                    comparators=[Call(
                      func=Attribute(
                        value=Name(
                          id='p',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[])]),
                  body=[AugAssign(
                    target=Name(
                      id='correct',
                      ctx=Store()),
                    op=Add(),
                    value=Num(n=1))],
                  orelse=[])],
              orelse=[])],
          orelse=[])]),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[Name(
          id='confusion_matrix',
          ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[BinOp(
          left=Call(
            func=Attribute(
              value=Name(
                id='confusion_matrix',
                ctx=Load()),
              attr='diag',
              ctx=Load()),
            args=[],
            keywords=[]),
          op=Div(),
          right=Call(
            func=Attribute(
              value=Name(
                id='confusion_matrix',
                ctx=Load()),
              attr='sum',
              ctx=Load()),
            args=[Num(n=1)],
            keywords=[]))],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='Accuracy: '),
          BinOp(
            left=Name(
              id='correct',
              ctx=Load()),
            op=Div(),
            right=Num(n=2482))],
        keywords=[]))],
    decorator_list=[],
    returns=None),
  If(
    test=Compare(
      left=Name(
        id='__name__',
        ctx=Load()),
      ops=[Eq()],
      comparators=[Str(s='__main__')]),
    body=[
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[Str(s='inside --main--')],
        keywords=[])),
      Assign(
        targets=[Attribute(
          value=Name(
            id='flair',
            ctx=Load()),
          attr='device',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='device',
            ctx=Load()),
          args=[Str(s='cuda')],
          keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='GPU available'),
          Call(
            func=Attribute(
              value=Attribute(
                value=Name(
                  id='torch',
                  ctx=Load()),
                attr='cuda',
                ctx=Load()),
              attr='is_available',
              ctx=Load()),
            args=[],
            keywords=[])],
        keywords=[])),
      Assign(
        targets=[Name(
          id='device',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='device',
            ctx=Load()),
          args=[Str(s='cuda:0')],
          keywords=[])),
      Expr(value=Call(
        func=Name(
          id='func',
          ctx=Load()),
        args=[],
        keywords=[]))],
    orelse=[])])