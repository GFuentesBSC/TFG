Module(body=[
  ImportFrom(
    module='eff_utils',
    names=[alias(
      name='*',
      asname=None)],
    level=0),
  FunctionDef(
    name='func',
    args=arguments(
      args=[],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Assign(
        targets=[Name(
          id='number_gpus',
          ctx=Store())],
        value=Num(n=1)),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='GPUs visible to PyTorch'),
          Name(
            id='number_gpus',
            ctx=Load()),
          Str(s='GPUs')],
        keywords=[])),
      Assign(
        targets=[Name(
          id='parser',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='argparse',
              ctx=Load()),
            attr='ArgumentParser',
            ctx=Load()),
          args=[],
          keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='parser',
            ctx=Load()),
          attr='add_argument',
          ctx=Load()),
        args=[Str(s='--epochs')],
        keywords=[
          keyword(
            arg='default',
            value=Num(n=20)),
          keyword(
            arg='type',
            value=Name(
              id='int',
              ctx=Load())),
          keyword(
            arg='required',
            value=NameConstant(value=True)),
          keyword(
            arg='help',
            value=Str(s='Number of epochs in the training process. Should be an integer number'))])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='parser',
            ctx=Load()),
          attr='add_argument',
          ctx=Load()),
        args=[Str(s='--eff_model')],
        keywords=[
          keyword(
            arg='default',
            value=Str(s='b0')),
          keyword(
            arg='type',
            value=Name(
              id='str',
              ctx=Load())),
          keyword(
            arg='required',
            value=NameConstant(value=True)),
          keyword(
            arg='help',
            value=Str(s='EfficientNet model used b0, b1, b2, b3 or b4'))])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='parser',
            ctx=Load()),
          attr='add_argument',
          ctx=Load()),
        args=[Str(s='--load_path')],
        keywords=[
          keyword(
            arg='default',
            value=Str(s='/gpfs/scratch/bsc31/bsc31275/')),
          keyword(
            arg='type',
            value=Name(
              id='str',
              ctx=Load())),
          keyword(
            arg='required',
            value=NameConstant(value=True)),
          keyword(
            arg='help',
            value=Str(s='EfficientNet model used b0, b1, b2, b3 or b4'))])),
      Assign(
        targets=[Name(
          id='args',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='parser',
              ctx=Load()),
            attr='parse_args',
            ctx=Load()),
          args=[],
          keywords=[])),
      Assign(
        targets=[Name(
          id='efficientnet_model',
          ctx=Store())],
        value=Attribute(
          value=Name(
            id='args',
            ctx=Load()),
          attr='eff_model',
          ctx=Load())),
      Assign(
        targets=[Name(
          id='description',
          ctx=Store())],
        value=BinOp(
          left=BinOp(
            left=BinOp(
              left=BinOp(
                left=Str(s='eff'),
                op=Add(),
                right=Name(
                  id='efficientnet_model',
                  ctx=Load())),
              op=Add(),
              right=Str(s='BT')),
            op=Add(),
            right=Call(
              func=Name(
                id='str',
                ctx=Load()),
              args=[Name(
                id='number_gpus',
                ctx=Load())],
              keywords=[])),
          op=Add(),
          right=Str(s='gpus_paper_exp_20_graph'))),
      Assign(
        targets=[Name(
          id='max_epochs',
          ctx=Store())],
        value=Attribute(
          value=Name(
            id='args',
            ctx=Load()),
          attr='epochs',
          ctx=Load())),
      Assign(
        targets=[Name(
          id='batch_size',
          ctx=Store())],
        value=IfExp(
          test=Compare(
            left=Call(
              func=Name(
                id='int',
                ctx=Load()),
              args=[Subscript(
                value=Name(
                  id='efficientnet_model',
                  ctx=Load()),
                slice=Index(value=Num(n=1)),
                ctx=Load())],
              keywords=[]),
            ops=[Lt()],
            comparators=[Num(n=3)]),
          body=BinOp(
            left=Num(n=16),
            op=Mult(),
            right=Name(
              id='number_gpus',
              ctx=Load())),
          orelse=BinOp(
            left=Num(n=8),
            op=Mult(),
            right=Name(
              id='number_gpus',
              ctx=Load())))),
      Assign(
        targets=[Name(
          id='big_tobacco_classes',
          ctx=Store())],
        value=Num(n=16)),
      Assign(
        targets=[Name(
          id='lr_multiplier',
          ctx=Store())],
        value=Num(n=0.2)),
      Assign(
        targets=[Name(
          id='learning_rate',
          ctx=Store())],
        value=BinOp(
          left=BinOp(
            left=Name(
              id='lr_multiplier',
              ctx=Load()),
            op=Mult(),
            right=Name(
              id='batch_size',
              ctx=Load())),
          op=Div(),
          right=Num(n=256))),
      Assign(
        targets=[Name(
          id='number_workers',
          ctx=Store())],
        value=BinOp(
          left=Num(n=4),
          op=Mult(),
          right=Name(
            id='number_gpus',
            ctx=Load()))),
      Assign(
        targets=[Name(
          id='triangular_lr',
          ctx=Store())],
        value=NameConstant(value=True)),
      Assign(
        targets=[Name(
          id='input_size',
          ctx=Store())],
        value=Num(n=384)),
      Expr(value=Str(s='\n    :param batch_size: batch size (16 for B0,B1,B2; 8 for B3,B4)\n    :param big_tobacco_classes: number of classes in BigTobacco dataset (16)\n    :param triangular_lr: uses triangular learning rate STLR\n    ')),
      Assign(
        targets=[Name(
          id='scratch_path',
          ctx=Store())],
        value=Attribute(
          value=Name(
            id='args',
            ctx=Load()),
          attr='load_path',
          ctx=Load())),
      Assign(
        targets=[Name(
          id='save_path',
          ctx=Store())],
        value=BinOp(
          left=BinOp(
            left=BinOp(
              left=BinOp(
                left=BinOp(
                  left=Name(
                    id='scratch_path',
                    ctx=Load()),
                  op=Add(),
                  right=Str(s='/image_models/paper_experiments/')),
                op=Add(),
                right=Call(
                  func=Name(
                    id='str',
                    ctx=Load()),
                  args=[Name(
                    id='max_epochs',
                    ctx=Load())],
                  keywords=[])),
              op=Add(),
              right=Call(
                func=Name(
                  id='str',
                  ctx=Load()),
                args=[Name(
                  id='learning_rate',
                  ctx=Load())],
                keywords=[])),
            op=Add(),
            right=Name(
              id='description',
              ctx=Load())),
          op=Add(),
          right=Str(s='.pt'))),
      Assign(
        targets=[Name(
          id='hdf5_file',
          ctx=Store())],
        value=BinOp(
          left=Name(
            id='scratch_path',
            ctx=Load()),
          op=Add(),
          right=Str(s='/BigTobacco_images_'))),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='batch size: '),
          Name(
            id='batch_size',
            ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='number of workers: '),
          Name(
            id='number_workers',
            ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='max_epochs'),
          Name(
            id='max_epochs',
            ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='efficientnet_model'),
          Name(
            id='efficientnet_model',
            ctx=Load())],
        keywords=[])),
      Assign(
        targets=[Name(
          id='documents_datasets',
          ctx=Store())],
        value=DictComp(
          key=Name(
            id='x',
            ctx=Load()),
          value=Call(
            func=Attribute(
              value=Name(
                id='H5',
                ctx=Load()),
              attr='H5Dataset',
              ctx=Load()),
            args=[],
            keywords=[
              keyword(
                arg='path',
                value=Call(
                  func=Name(
                    id='str',
                    ctx=Load()),
                  args=[BinOp(
                    left=BinOp(
                      left=Name(
                        id='hdf5_file',
                        ctx=Load()),
                      op=Add(),
                      right=Name(
                        id='x',
                        ctx=Load())),
                    op=Add(),
                    right=Str(s='.hdf5'))],
                  keywords=[])),
              keyword(
                arg='data_transforms',
                value=Subscript(
                  value=Name(
                    id='data_transforms',
                    ctx=Load()),
                  slice=Index(value=Name(
                    id='x',
                    ctx=Load())),
                  ctx=Load())),
              keyword(
                arg='phase',
                value=Name(
                  id='x',
                  ctx=Load()))]),
          generators=[comprehension(
            target=Name(
              id='x',
              ctx=Store()),
            iter=List(
              elts=[
                Str(s='train'),
                Str(s='val')],
              ctx=Load()),
            ifs=[],
            is_async=0)])),
      Assign(
        targets=[Name(
          id='dataloaders_dict',
          ctx=Store())],
        value=DictComp(
          key=Name(
            id='x',
            ctx=Load()),
          value=Call(
            func=Name(
              id='DataLoader',
              ctx=Load()),
            args=[Subscript(
              value=Name(
                id='documents_datasets',
                ctx=Load()),
              slice=Index(value=Name(
                id='x',
                ctx=Load())),
              ctx=Load())],
            keywords=[
              keyword(
                arg='batch_size',
                value=IfExp(
                  test=Compare(
                    left=Name(
                      id='x',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[Str(s='train')]),
                  body=Name(
                    id='batch_size',
                    ctx=Load()),
                  orelse=Call(
                    func=Name(
                      id='int',
                      ctx=Load()),
                    args=[BinOp(
                      left=Name(
                        id='batch_size',
                        ctx=Load()),
                      op=Div(),
                      right=BinOp(
                        left=Name(
                          id='number_gpus',
                          ctx=Load()),
                        op=Mult(),
                        right=Num(n=2)))],
                    keywords=[]))),
              keyword(
                arg='shuffle',
                value=NameConstant(value=True)),
              keyword(
                arg='num_workers',
                value=Name(
                  id='number_workers',
                  ctx=Load())),
              keyword(
                arg='pin_memory',
                value=NameConstant(value=True))]),
          generators=[comprehension(
            target=Name(
              id='x',
              ctx=Store()),
            iter=List(
              elts=[
                Str(s='train'),
                Str(s='val')],
              ctx=Load()),
            ifs=[],
            is_async=0)])),
      Assign(
        targets=[Name(
          id='feature_extracting',
          ctx=Store())],
        value=NameConstant(value=True)),
      Assign(
        targets=[Name(
          id='net',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='EfficientNet',
              ctx=Load()),
            attr='from_pretrained',
            ctx=Load()),
          args=[BinOp(
            left=Str(s='efficientnet-'),
            op=Add(),
            right=Name(
              id='efficientnet_model',
              ctx=Load()))],
          keywords=[keyword(
            arg='num_classes',
            value=Num(n=1000))])),
      Assign(
        targets=[Name(
          id='num_ftrs',
          ctx=Store())],
        value=Attribute(
          value=Attribute(
            value=Name(
              id='net',
              ctx=Load()),
            attr='_fc',
            ctx=Load()),
          attr='in_features',
          ctx=Load())),
      Assign(
        targets=[Attribute(
          value=Name(
            id='net',
            ctx=Load()),
          attr='_fc',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='nn',
              ctx=Load()),
            attr='Linear',
            ctx=Load()),
          args=[
            Name(
              id='num_ftrs',
              ctx=Load()),
            Name(
              id='big_tobacco_classes',
              ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='model',
          ctx=Store())],
        value=Name(
          id='net',
          ctx=Load())),
      Assign(
        targets=[Name(
          id='criterion',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='nn',
              ctx=Load()),
            attr='CrossEntropyLoss',
            ctx=Load()),
          args=[],
          keywords=[])),
      Assign(
        targets=[Name(
          id='optimizer',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='optim',
              ctx=Load()),
            attr='SGD',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='parameters',
              ctx=Load()),
            args=[],
            keywords=[])],
          keywords=[
            keyword(
              arg='lr',
              value=Name(
                id='learning_rate',
                ctx=Load())),
            keyword(
              arg='momentum',
              value=Num(n=0.9)),
            keyword(
              arg='weight_decay',
              value=Num(n=4e-05))])),
      Assign(
        targets=[Name(
          id='batches_per_epoch',
          ctx=Store())],
        value=BinOp(
          left=Call(
            func=Name(
              id='len',
              ctx=Load()),
            args=[Attribute(
              value=Subscript(
                value=Name(
                  id='dataloaders_dict',
                  ctx=Load()),
                slice=Index(value=Str(s='train')),
                ctx=Load()),
              attr='dataset',
              ctx=Load())],
            keywords=[]),
          op=Div(),
          right=Name(
            id='batch_size',
            ctx=Load()))),
      If(
        test=Compare(
          left=Name(
            id='triangular_lr',
            ctx=Load()),
          ops=[Eq()],
          comparators=[NameConstant(value=True)]),
        body=[Assign(
          targets=[Name(
            id='scheduler',
            ctx=Store())],
          value=Call(
            func=Name(
              id='SlantedTriangular',
              ctx=Load()),
            args=[Name(
              id='optimizer',
              ctx=Load())],
            keywords=[
              keyword(
                arg='num_epochs',
                value=Name(
                  id='max_epochs',
                  ctx=Load())),
              keyword(
                arg='num_steps_per_epoch',
                value=Name(
                  id='batches_per_epoch',
                  ctx=Load())),
              keyword(
                arg='gradual_unfreezing',
                value=NameConstant(value=False))]))],
        orelse=[Assign(
          targets=[Name(
            id='scheduler',
            ctx=Store())],
          value=Call(
            func=Name(
              id='ReduceLROnPlateau',
              ctx=Load()),
            args=[
              Name(
                id='optimizer',
                ctx=Load()),
              Str(s='min')],
            keywords=[
              keyword(
                arg='patience',
                value=Num(n=4)),
              keyword(
                arg='factor',
                value=Num(n=0.5))]))]),
      Assign(
        targets=[Name(
          id='loss_values',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='epoch_values',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='val_acc_history',
          ctx=Store())],
        value=List(
          elts=[],
          ctx=Load())),
      Assign(
        targets=[Name(
          id='best_model_wts',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='copy',
              ctx=Load()),
            attr='deepcopy',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='state_dict',
              ctx=Load()),
            args=[],
            keywords=[])],
          keywords=[])),
      Assign(
        targets=[Name(
          id='best_acc',
          ctx=Store())],
        value=Num(n=0.0)),
      Assign(
        targets=[Name(
          id='initial_train_time',
          ctx=Store())],
        value=Num(n=0)),
      Assign(
        targets=[Name(
          id='initial_val_time',
          ctx=Store())],
        value=Num(n=0)),
      For(
        target=Name(
          id='epoch',
          ctx=Store()),
        iter=Call(
          func=Name(
            id='range',
            ctx=Load()),
          args=[Name(
            id='max_epochs',
            ctx=Load())],
          keywords=[]),
        body=[
          Assign(
            targets=[Name(
              id='results_file',
              ctx=Store())],
            value=List(
              elts=[],
              ctx=Load())),
          Assign(
            targets=[Name(
              id='since',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='time',
                  ctx=Load()),
                attr='time',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Name(
              id='correct',
              ctx=Store())],
            value=Num(n=0)),
          For(
            target=Name(
              id='phase',
              ctx=Store()),
            iter=List(
              elts=[
                Str(s='train'),
                Str(s='val')],
              ctx=Load()),
            body=[
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='train')]),
                body=[
                  Assign(
                    targets=[Name(
                      id='initial_train_time',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='time',
                          ctx=Load()),
                        attr='time',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  If(
                    test=Compare(
                      left=Name(
                        id='epoch',
                        ctx=Load()),
                      ops=[GtE()],
                      comparators=[Num(n=1)]),
                    body=[
                      Assign(
                        targets=[Name(
                          id='end_validation_time',
                          ctx=Store())],
                        value=BinOp(
                          left=Call(
                            func=Attribute(
                              value=Name(
                                id='time',
                                ctx=Load()),
                              attr='time',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          op=Sub(),
                          right=Name(
                            id='initial_val_time',
                            ctx=Load()))),
                      Expr(value=Call(
                        func=Name(
                          id='print',
                          ctx=Load()),
                        args=[
                          Str(s='Validation time: '),
                          Name(
                            id='end_validation_time',
                            ctx=Load())],
                        keywords=[]))],
                    orelse=[]),
                  Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='model',
                        ctx=Load()),
                      attr='train',
                      ctx=Load()),
                    args=[],
                    keywords=[]))],
                orelse=[
                  Assign(
                    targets=[Name(
                      id='end_train_time',
                      ctx=Store())],
                    value=BinOp(
                      left=Call(
                        func=Attribute(
                          value=Name(
                            id='time',
                            ctx=Load()),
                          attr='time',
                          ctx=Load()),
                        args=[],
                        keywords=[]),
                      op=Sub(),
                      right=Name(
                        id='initial_train_time',
                        ctx=Load()))),
                  Expr(value=Call(
                    func=Name(
                      id='print',
                      ctx=Load()),
                    args=[
                      Str(s='Training time: '),
                      Name(
                        id='end_train_time',
                        ctx=Load())],
                    keywords=[])),
                  Assign(
                    targets=[Name(
                      id='initial_val_time',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='time',
                          ctx=Load()),
                        attr='time',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='model',
                        ctx=Load()),
                      attr='eval',
                      ctx=Load()),
                    args=[],
                    keywords=[]))]),
              Assign(
                targets=[Name(
                  id='running_loss',
                  ctx=Store())],
                value=Num(n=0.0)),
              Assign(
                targets=[Name(
                  id='running_corrects',
                  ctx=Store())],
                value=Num(n=0)),
              Assign(
                targets=[Name(
                  id='batch_counter',
                  ctx=Store())],
                value=Num(n=0)),
              For(
                target=Name(
                  id='local_batch',
                  ctx=Store()),
                iter=Subscript(
                  value=Name(
                    id='dataloaders_dict',
                    ctx=Load()),
                  slice=Index(value=Name(
                    id='phase',
                    ctx=Load())),
                  ctx=Load()),
                body=[
                  Assign(
                    targets=[Name(
                      id='batchs_number',
                      ctx=Store())],
                    value=BinOp(
                      left=Call(
                        func=Name(
                          id='len',
                          ctx=Load()),
                        args=[Attribute(
                          value=Subscript(
                            value=Name(
                              id='dataloaders_dict',
                              ctx=Load()),
                            slice=Index(value=Name(
                              id='phase',
                              ctx=Load())),
                            ctx=Load()),
                          attr='dataset',
                          ctx=Load())],
                        keywords=[]),
                      op=Div(),
                      right=Name(
                        id='batch_size',
                        ctx=Load()))),
                  AugAssign(
                    target=Name(
                      id='batch_counter',
                      ctx=Store()),
                    op=Add(),
                    value=Num(n=1)),
                  Assign(
                    targets=[Tuple(
                      elts=[
                        Name(
                          id='image',
                          ctx=Store()),
                        Name(
                          id='labels',
                          ctx=Store())],
                      ctx=Store())],
                    value=Tuple(
                      elts=[
                        Call(
                          func=Name(
                            id='Variable',
                            ctx=Load()),
                          args=[Subscript(
                            value=Name(
                              id='local_batch',
                              ctx=Load()),
                            slice=Index(value=Str(s='image')),
                            ctx=Load())],
                          keywords=[]),
                        Call(
                          func=Name(
                            id='Variable',
                            ctx=Load()),
                          args=[Subscript(
                            value=Name(
                              id='local_batch',
                              ctx=Load()),
                            slice=Index(value=Str(s='class')),
                            ctx=Load())],
                          keywords=[])],
                      ctx=Load())),
                  Assign(
                    targets=[Tuple(
                      elts=[
                        Name(
                          id='image',
                          ctx=Store()),
                        Name(
                          id='labels',
                          ctx=Store())],
                      ctx=Store())],
                    value=Tuple(
                      elts=[
                        Call(
                          func=Attribute(
                            value=Name(
                              id='image',
                              ctx=Load()),
                            attr='to',
                            ctx=Load()),
                          args=[Name(
                            id='device',
                            ctx=Load())],
                          keywords=[]),
                        Call(
                          func=Attribute(
                            value=Name(
                              id='labels',
                              ctx=Load()),
                            attr='to',
                            ctx=Load()),
                          args=[Name(
                            id='device',
                            ctx=Load())],
                          keywords=[])],
                      ctx=Load())),
                  Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='optimizer',
                        ctx=Load()),
                      attr='zero_grad',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                  Assign(
                    targets=[Name(
                      id='outputs',
                      ctx=Store())],
                    value=Call(
                      func=Name(
                        id='model',
                        ctx=Load()),
                      args=[Name(
                        id='image',
                        ctx=Load())],
                      keywords=[])),
                  Assign(
                    targets=[Tuple(
                      elts=[
                        Name(
                          id='_',
                          ctx=Store()),
                        Name(
                          id='preds',
                          ctx=Store())],
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='torch',
                          ctx=Load()),
                        attr='max',
                        ctx=Load()),
                      args=[
                        Attribute(
                          value=Name(
                            id='outputs',
                            ctx=Load()),
                          attr='data',
                          ctx=Load()),
                        Num(n=1)],
                      keywords=[])),
                  Assign(
                    targets=[Name(
                      id='labels',
                      ctx=Store())],
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='labels',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  Assign(
                    targets=[Name(
                      id='loss',
                      ctx=Store())],
                    value=Call(
                      func=Name(
                        id='criterion',
                        ctx=Load()),
                      args=[
                        Name(
                          id='outputs',
                          ctx=Load()),
                        Name(
                          id='labels',
                          ctx=Load())],
                      keywords=[])),
                  AugAssign(
                    target=Name(
                      id='running_corrects',
                      ctx=Store()),
                    op=Add(),
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='torch',
                          ctx=Load()),
                        attr='sum',
                        ctx=Load()),
                      args=[Compare(
                        left=Name(
                          id='preds',
                          ctx=Load()),
                        ops=[Eq()],
                        comparators=[Attribute(
                          value=Name(
                            id='labels',
                            ctx=Load()),
                          attr='data',
                          ctx=Load())])],
                      keywords=[])),
                  If(
                    test=Compare(
                      left=Name(
                        id='phase',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='train')]),
                    body=[
                      Expr(value=Call(
                        func=Attribute(
                          value=Name(
                            id='loss',
                            ctx=Load()),
                          attr='backward',
                          ctx=Load()),
                        args=[],
                        keywords=[])),
                      Expr(value=Call(
                        func=Attribute(
                          value=Name(
                            id='optimizer',
                            ctx=Load()),
                          attr='step',
                          ctx=Load()),
                        args=[],
                        keywords=[])),
                      If(
                        test=Compare(
                          left=Name(
                            id='triangular_lr',
                            ctx=Load()),
                          ops=[Eq()],
                          comparators=[NameConstant(value=True)]),
                        body=[Expr(value=Call(
                          func=Attribute(
                            value=Name(
                              id='scheduler',
                              ctx=Load()),
                            attr='step_batch',
                            ctx=Load()),
                          args=[],
                          keywords=[]))],
                        orelse=[])],
                    orelse=[]),
                  AugAssign(
                    target=Name(
                      id='running_loss',
                      ctx=Store()),
                    op=Add(),
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='loss',
                          ctx=Load()),
                        attr='item',
                        ctx=Load()),
                      args=[],
                      keywords=[]))],
                orelse=[]),
              Assign(
                targets=[Name(
                  id='epoch_loss',
                  ctx=Store())],
                value=BinOp(
                  left=Name(
                    id='running_loss',
                    ctx=Load()),
                  op=Div(),
                  right=Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Attribute(
                      value=Subscript(
                        value=Name(
                          id='dataloaders_dict',
                          ctx=Load()),
                        slice=Index(value=Name(
                          id='phase',
                          ctx=Load())),
                        ctx=Load()),
                      attr='dataset',
                      ctx=Load())],
                    keywords=[]))),
              Assign(
                targets=[Name(
                  id='epoch_acc',
                  ctx=Store())],
                value=BinOp(
                  left=Call(
                    func=Attribute(
                      value=Name(
                        id='running_corrects',
                        ctx=Load()),
                      attr='double',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  op=Div(),
                  right=Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Attribute(
                      value=Subscript(
                        value=Name(
                          id='dataloaders_dict',
                          ctx=Load()),
                        slice=Index(value=Name(
                          id='phase',
                          ctx=Load())),
                        ctx=Load()),
                      attr='dataset',
                      ctx=Load())],
                    keywords=[]))),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='train')]),
                body=[Assign(
                  targets=[Name(
                    id='train_loss',
                    ctx=Store())],
                  value=Name(
                    id='epoch_loss',
                    ctx=Load()))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[Assign(
                  targets=[Name(
                    id='val_loss',
                    ctx=Store())],
                  value=Name(
                    id='epoch_loss',
                    ctx=Load()))],
                orelse=[]),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='val')]),
                body=[If(
                  test=Compare(
                    left=Name(
                      id='triangular_lr',
                      ctx=Load()),
                    ops=[Eq()],
                    comparators=[NameConstant(value=True)]),
                  body=[Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='scheduler',
                        ctx=Load()),
                      attr='step',
                      ctx=Load()),
                    args=[],
                    keywords=[]))],
                  orelse=[Expr(value=Call(
                    func=Attribute(
                      value=Name(
                        id='scheduler',
                        ctx=Load()),
                      attr='step',
                      ctx=Load()),
                    args=[Name(
                      id='epoch_loss',
                      ctx=Load())],
                    keywords=[]))])],
                orelse=[]),
              Assign(
                targets=[Name(
                  id='actual_lr',
                  ctx=Store())],
                value=Call(
                  func=Name(
                    id='get_lr',
                    ctx=Load()),
                  args=[Name(
                    id='optimizer',
                    ctx=Load())],
                  keywords=[])),
              Expr(value=Call(
                func=Name(
                  id='print',
                  ctx=Load()),
                args=[Call(
                  func=Attribute(
                    value=Str(s='[Epoch {}/{}] {} lr: {:.4f}, Loss: {:.4f} Acc: {:.4f}'),
                    attr='format',
                    ctx=Load()),
                  args=[
                    Name(
                      id='epoch',
                      ctx=Load()),
                    Name(
                      id='max_epochs',
                      ctx=Load()),
                    Name(
                      id='phase',
                      ctx=Load()),
                    Name(
                      id='actual_lr',
                      ctx=Load()),
                    Name(
                      id='epoch_loss',
                      ctx=Load()),
                    Name(
                      id='epoch_acc',
                      ctx=Load())],
                  keywords=[])],
                keywords=[])),
              If(
                test=BoolOp(
                  op=And(),
                  values=[
                    Compare(
                      left=Name(
                        id='phase',
                        ctx=Load()),
                      ops=[Eq()],
                      comparators=[Str(s='val')]),
                    Compare(
                      left=Name(
                        id='epoch_acc',
                        ctx=Load()),
                      ops=[Gt()],
                      comparators=[Name(
                        id='best_acc',
                        ctx=Load())])]),
                body=[Assign(
                  targets=[Name(
                    id='best_acc',
                    ctx=Store())],
                  value=Name(
                    id='epoch_acc',
                    ctx=Load()))],
                orelse=[])],
            orelse=[]),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Name(
              id='time_elapsed',
              ctx=Store())],
            value=BinOp(
              left=Call(
                func=Attribute(
                  value=Name(
                    id='time',
                    ctx=Load()),
                  attr='time',
                  ctx=Load()),
                args=[],
                keywords=[]),
              op=Sub(),
              right=Name(
                id='since',
                ctx=Load()))),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[Call(
              func=Attribute(
                value=Str(s='Training completed in {:.0f}m {:.0f}s'),
                attr='format',
                ctx=Load()),
              args=[
                BinOp(
                  left=Name(
                    id='time_elapsed',
                    ctx=Load()),
                  op=FloorDiv(),
                  right=Num(n=60)),
                BinOp(
                  left=Name(
                    id='time_elapsed',
                    ctx=Load()),
                  op=Mod(),
                  right=Num(n=60))],
              keywords=[])],
            keywords=[])),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[Call(
              func=Attribute(
                value=Str(s='Best val Acc: {:4f}'),
                attr='format',
                ctx=Load()),
              args=[Name(
                id='best_acc',
                ctx=Load())],
              keywords=[])],
            keywords=[])),
          Expr(value=Call(
            func=Name(
              id='print',
              ctx=Load()),
            args=[],
            keywords=[]))],
        orelse=[]),
      Assign(
        targets=[Name(
          id='h5_dataset_test',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='H5',
              ctx=Load()),
            attr='H5Dataset',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='path',
              value=Call(
                func=Name(
                  id='str',
                  ctx=Load()),
                args=[BinOp(
                  left=BinOp(
                    left=Name(
                      id='hdf5_file',
                      ctx=Load()),
                    op=Add(),
                    right=Str(s='test')),
                  op=Add(),
                  right=Str(s='.hdf5'))],
                keywords=[])),
            keyword(
              arg='data_transforms',
              value=Subscript(
                value=Name(
                  id='data_transforms',
                  ctx=Load()),
                slice=Index(value=Str(s='test')),
                ctx=Load())),
            keyword(
              arg='phase',
              value=Str(s='test'))])),
      Assign(
        targets=[Name(
          id='dataloader_test',
          ctx=Store())],
        value=Call(
          func=Name(
            id='DataLoader',
            ctx=Load()),
          args=[Name(
            id='h5_dataset_test',
            ctx=Load())],
          keywords=[
            keyword(
              arg='batch_size',
              value=Call(
                func=Name(
                  id='int',
                  ctx=Load()),
                args=[BinOp(
                  left=Name(
                    id='batch_size',
                    ctx=Load()),
                  op=Div(),
                  right=BinOp(
                    left=Name(
                      id='number_gpus',
                      ctx=Load()),
                    op=Mult(),
                    right=Num(n=2)))],
                keywords=[])),
            keyword(
              arg='shuffle',
              value=NameConstant(value=False)),
            keyword(
              arg='num_workers',
              value=Num(n=4))])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[Str(s='Testing...')],
        keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='eval',
          ctx=Load()),
        args=[],
        keywords=[])),
      Assign(
        targets=[Name(
          id='correct',
          ctx=Store())],
        value=Num(n=0)),
      Assign(
        targets=[Name(
          id='max_size',
          ctx=Store())],
        value=Num(n=0)),
      Assign(
        targets=[Name(
          id='confusion_matrix',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='zeros',
            ctx=Load()),
          args=[
            Name(
              id='big_tobacco_classes',
              ctx=Load()),
            Name(
              id='big_tobacco_classes',
              ctx=Load())],
          keywords=[])),
      With(
        items=[withitem(
          context_expr=Call(
            func=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='no_grad',
              ctx=Load()),
            args=[],
            keywords=[]),
          optional_vars=None)],
        body=[For(
          target=Tuple(
            elts=[
              Name(
                id='i',
                ctx=Store()),
              Name(
                id='local_batch',
                ctx=Store())],
            ctx=Store()),
          iter=Call(
            func=Name(
              id='enumerate',
              ctx=Load()),
            args=[Name(
              id='dataloader_test',
              ctx=Load())],
            keywords=[]),
          body=[
            Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='image',
                    ctx=Store()),
                  Name(
                    id='labels',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Name(
                      id='Variable',
                      ctx=Load()),
                    args=[Subscript(
                      value=Name(
                        id='local_batch',
                        ctx=Load()),
                      slice=Index(value=Str(s='image')),
                      ctx=Load())],
                    keywords=[]),
                  Call(
                    func=Name(
                      id='Variable',
                      ctx=Load()),
                    args=[Subscript(
                      value=Name(
                        id='local_batch',
                        ctx=Load()),
                      slice=Index(value=Str(s='class')),
                      ctx=Load())],
                    keywords=[])],
                ctx=Load())),
            Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='image',
                    ctx=Store()),
                  Name(
                    id='labels',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='image',
                        ctx=Load()),
                      attr='to',
                      ctx=Load()),
                    args=[Name(
                      id='device',
                      ctx=Load())],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='labels',
                        ctx=Load()),
                      attr='to',
                      ctx=Load()),
                    args=[Name(
                      id='device',
                      ctx=Load())],
                    keywords=[])],
                ctx=Load())),
            Assign(
              targets=[Name(
                id='outputs',
                ctx=Store())],
              value=Call(
                func=Name(
                  id='model',
                  ctx=Load()),
                args=[Name(
                  id='image',
                  ctx=Load())],
                keywords=[])),
            Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='_',
                    ctx=Store()),
                  Name(
                    id='preds',
                    ctx=Store())],
                ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(
                    id='torch',
                    ctx=Load()),
                  attr='max',
                  ctx=Load()),
                args=[
                  Attribute(
                    value=Name(
                      id='outputs',
                      ctx=Load()),
                    attr='data',
                    ctx=Load()),
                  Num(n=1)],
                keywords=[])),
            For(
              target=Tuple(
                elts=[
                  Name(
                    id='t',
                    ctx=Store()),
                  Name(
                    id='p',
                    ctx=Store())],
                ctx=Store()),
              iter=Call(
                func=Name(
                  id='zip',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='labels',
                        ctx=Load()),
                      attr='view',
                      ctx=Load()),
                    args=[UnaryOp(
                      op=USub(),
                      operand=Num(n=1))],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='preds',
                        ctx=Load()),
                      attr='view',
                      ctx=Load()),
                    args=[UnaryOp(
                      op=USub(),
                      operand=Num(n=1))],
                    keywords=[])],
                keywords=[]),
              body=[
                AugAssign(
                  target=Subscript(
                    value=Name(
                      id='confusion_matrix',
                      ctx=Load()),
                    slice=Index(value=Tuple(
                      elts=[
                        Call(
                          func=Attribute(
                            value=Name(
                              id='t',
                              ctx=Load()),
                            attr='long',
                            ctx=Load()),
                          args=[],
                          keywords=[]),
                        Call(
                          func=Attribute(
                            value=Name(
                              id='p',
                              ctx=Load()),
                            attr='long',
                            ctx=Load()),
                          args=[],
                          keywords=[])],
                      ctx=Load())),
                    ctx=Store()),
                  op=Add(),
                  value=Num(n=1)),
                If(
                  test=Compare(
                    left=Call(
                      func=Attribute(
                        value=Name(
                          id='t',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[]),
                    ops=[Eq()],
                    comparators=[Call(
                      func=Attribute(
                        value=Name(
                          id='p',
                          ctx=Load()),
                        attr='long',
                        ctx=Load()),
                      args=[],
                      keywords=[])]),
                  body=[AugAssign(
                    target=Name(
                      id='correct',
                      ctx=Store()),
                    op=Add(),
                    value=Num(n=1))],
                  orelse=[])],
              orelse=[])],
          orelse=[])]),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[Name(
          id='confusion_matrix',
          ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[BinOp(
          left=Call(
            func=Attribute(
              value=Name(
                id='confusion_matrix',
                ctx=Load()),
              attr='diag',
              ctx=Load()),
            args=[],
            keywords=[]),
          op=Div(),
          right=Call(
            func=Attribute(
              value=Name(
                id='confusion_matrix',
                ctx=Load()),
              attr='sum',
              ctx=Load()),
            args=[Num(n=1)],
            keywords=[]))],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='Accuracy: '),
          BinOp(
            left=Name(
              id='correct',
              ctx=Load()),
            op=Div(),
            right=Call(
              func=Name(
                id='len',
                ctx=Load()),
              args=[Attribute(
                value=Name(
                  id='dataloader_test',
                  ctx=Load()),
                attr='dataset',
                ctx=Load())],
              keywords=[]))],
        keywords=[]))],
    decorator_list=[],
    returns=None),
  If(
    test=Compare(
      left=Name(
        id='__name__',
        ctx=Load()),
      ops=[Eq()],
      comparators=[Str(s='__main__')]),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='multiprocessing',
            ctx=Load()),
          attr='set_start_method',
          ctx=Load()),
        args=[Str(s='spawn')],
        keywords=[keyword(
          arg='force',
          value=Str(s='True'))])),
      Expr(value=Call(
        func=Name(
          id='print',
          ctx=Load()),
        args=[
          Str(s='GPU available'),
          Call(
            func=Attribute(
              value=Attribute(
                value=Name(
                  id='torch',
                  ctx=Load()),
                attr='cuda',
                ctx=Load()),
              attr='is_available',
              ctx=Load()),
            args=[],
            keywords=[])],
        keywords=[])),
      Assign(
        targets=[Name(
          id='device',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='device',
            ctx=Load()),
          args=[Str(s='cuda:0')],
          keywords=[])),
      Expr(value=Call(
        func=Name(
          id='func',
          ctx=Load()),
        args=[],
        keywords=[]))],
    orelse=[])])